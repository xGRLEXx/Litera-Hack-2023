<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Teams.AI</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Teams.AI.AI.Action.ActionAttribute">
            <summary>
            Attribute that marks a method as an action.
            </summary>
        </member>
        <member name="P:Microsoft.Teams.AI.AI.Action.ActionAttribute.Name">
            <summary>
            The name of the action.
            </summary>
        </member>
        <member name="P:Microsoft.Teams.AI.AI.Action.ActionAttribute.AllowOverrides">
            <summary>
            Whether or not this action's properties can be overridden.
            </summary>
        </member>
        <member name="M:Microsoft.Teams.AI.AI.Action.ActionAttribute.#ctor(System.String,System.Boolean)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Teams.AI.AI.Action.ActionAttribute"/> class.
            </summary>
            <param name="name">The name of the action.</param>
            <param name="allowOverrides">Whether this action can override an existing one.</param>
        </member>
        <member name="P:Microsoft.Teams.AI.AI.Action.ActionCollection`1.Item(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Teams.AI.AI.Action.ActionCollection`1.AddAction(System.String,Microsoft.Teams.AI.AI.Action.IActionHandler{`0},System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Teams.AI.AI.Action.ActionCollection`1.ContainsAction(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.Teams.AI.AI.Action.ActionEntitiesAttribute">
            <summary>
            Attribute to represent the action entities parameter of an action method.
            </summary>
        </member>
        <member name="M:Microsoft.Teams.AI.AI.Action.ActionEntitiesAttribute.#ctor">
            <summary>
            Create new <see cref="T:Microsoft.Teams.AI.AI.Action.ActionEntitiesAttribute"/>.
            </summary>
        </member>
        <member name="T:Microsoft.Teams.AI.AI.Action.ActionEntry`1">
            <summary>
            Represents an action.
            </summary>
            <typeparam name="TState"></typeparam>
        </member>
        <member name="P:Microsoft.Teams.AI.AI.Action.ActionEntry`1.Name">
            <summary>
            The action name.
            </summary>
        </member>
        <member name="P:Microsoft.Teams.AI.AI.Action.ActionEntry`1.Handler">
            <summary>
            The action handler function.
            </summary>
        </member>
        <member name="P:Microsoft.Teams.AI.AI.Action.ActionEntry`1.AllowOverrides">
            <summary>
            Whether to allow overrides of this action's properties.
            </summary>
        </member>
        <member name="M:Microsoft.Teams.AI.AI.Action.ActionEntry`1.#ctor(System.String,Microsoft.Teams.AI.AI.Action.IActionHandler{`0},System.Boolean)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Teams.AI.AI.Action.ActionEntry`1"/> class.
            </summary>
            <param name="name">The action name.</param>
            <param name="handler">The action handler function.</param>
            <param name="allowOverrides">Whether to allow overrides of this action's properties.</param>
        </member>
        <member name="M:Microsoft.Teams.AI.AI.Action.ActionEntry`1.FromNativeMethod(System.Reflection.MethodInfo,System.Object)">
            <summary>
            Converts a method with the <see cref="T:Microsoft.Teams.AI.AI.Action.ActionAttribute"/> to an <see cref="T:Microsoft.Teams.AI.AI.Action.ActionEntry`1"/>.
            </summary>
            <param name="methodSignature">The method signature.</param>
            <param name="methodContainerInstance">The instance of a class which contains the method.</param>
            <returns>
            The <see cref="T:Microsoft.Teams.AI.AI.Action.ActionEntry`1"/> if the given method adheres to the <see cref="T:Microsoft.Teams.AI.AI.Action.ActionHandler`1"/> delegate
            and has the <see cref="T:Microsoft.Teams.AI.AI.Action.ActionAttribute"/>. Otherwise, returns null.
            </returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="T:Microsoft.Teams.AI.AI.Action.ActionHandler`1">
            <summary>
            The action handler built from method.
            </summary>
            <typeparam name="TState">Type of the turn state</typeparam>
        </member>
        <member name="T:Microsoft.Teams.AI.AI.Action.ActionNameAttribute">
            <summary>
            Attribute to represent the action name parameter of an action method.
            </summary>
        </member>
        <member name="M:Microsoft.Teams.AI.AI.Action.ActionNameAttribute.#ctor">
            <summary>
            Create new <see cref="T:Microsoft.Teams.AI.AI.Action.ActionNameAttribute"/>.
            </summary>
        </member>
        <member name="T:Microsoft.Teams.AI.AI.Action.ActionParameterAttribute">
            <summary>
            Attribute that marks a method parameter as an action parameter.
            </summary>
        </member>
        <member name="P:Microsoft.Teams.AI.AI.Action.ActionParameterAttribute.ActionParameterType">
            <summary>
            The attribute type that represents what the action parameter is.
            </summary>
        </member>
        <member name="T:Microsoft.Teams.AI.AI.Action.ActionParameterType">
            <summary>
            Represent what the action parameter is.
            </summary>
        </member>
        <member name="F:Microsoft.Teams.AI.AI.Action.ActionParameterType.TurnContext">
            <summary>
            The action parameter is TurnContext
            </summary>
        </member>
        <member name="F:Microsoft.Teams.AI.AI.Action.ActionParameterType.TurnState">
            <summary>
            The action parameter is TurnState
            </summary>
        </member>
        <member name="F:Microsoft.Teams.AI.AI.Action.ActionParameterType.Entities">
            <summary>
            The action parameter is data object
            </summary>
        </member>
        <member name="F:Microsoft.Teams.AI.AI.Action.ActionParameterType.Name">
            <summary>
            The action parameter is action name
            </summary>
        </member>
        <member name="F:Microsoft.Teams.AI.AI.Action.ActionParameterType.Unknown">
            <summary>
            The action parameter is not attributed, use default value
            </summary>
        </member>
        <member name="T:Microsoft.Teams.AI.AI.Action.ActionTurnContextAttribute">
            <summary>
            Attribute to represent the <see cref="T:Microsoft.Bot.Builder.ITurnContext"/> parameter of an action method.
            </summary>
        </member>
        <member name="M:Microsoft.Teams.AI.AI.Action.ActionTurnContextAttribute.#ctor">
            <summary>
            Create new <see cref="T:Microsoft.Teams.AI.AI.Action.ActionTurnContextAttribute"/>.
            </summary>
        </member>
        <member name="T:Microsoft.Teams.AI.AI.Action.ActionTurnStateAttribute">
            <summary>
            Attribute to represent the <see cref="T:Microsoft.Teams.AI.State.TurnState"/> parameter of an action method.
            </summary>
        </member>
        <member name="M:Microsoft.Teams.AI.AI.Action.ActionTurnStateAttribute.#ctor">
            <summary>
            Create new <see cref="T:Microsoft.Teams.AI.AI.Action.ActionTurnStateAttribute"/>.
            </summary>
        </member>
        <member name="T:Microsoft.Teams.AI.AI.Action.DoCommandActionData`1">
            <summary>
            The data for default DO command action handler.
            </summary>
            <typeparam name="TState">Type of turn state.</typeparam>
        </member>
        <member name="P:Microsoft.Teams.AI.AI.Action.DoCommandActionData`1.PredictedDoCommand">
            <summary>
            The predicted DO command.
            </summary>
        </member>
        <member name="P:Microsoft.Teams.AI.AI.Action.DoCommandActionData`1.Handler">
            <summary>
            The handler to perform the predicted command.
            </summary>
        </member>
        <member name="P:Microsoft.Teams.AI.AI.Action.IActionCollection`1.Item(System.String)">
            <summary>
            Get an action from the collection.
            </summary>
            <param name="actionName">The name of the action.</param>
            <returns>The action entry in this collection.</returns>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:Microsoft.Teams.AI.AI.Action.IActionCollection`1.AddAction(System.String,Microsoft.Teams.AI.AI.Action.IActionHandler{`0},System.Boolean)">
            <summary>
            Add an action to the collection.
            </summary>
            <param name="actionName">The name of the action.</param>
            <param name="handler">The action handler.</param>
            <param name="allowOverrides">Whether or not this action's properties can be overridden. Default to false.</param>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:Microsoft.Teams.AI.AI.Action.IActionCollection`1.ContainsAction(System.String)">
            <summary>
            Checks if the action is in the collection.
            </summary>
            <param name="actionName">The name of the action.</param>
            <returns>Return true if the action exists. Otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.AI.Action.IActionCollection`1.TryGetAction(System.String,Microsoft.Teams.AI.AI.Action.ActionEntry{`0}@)">
            <summary>
            Get an action from the collection.
            </summary>
            <param name="actionName">The name of the action.</param>
            <param name="actionEntry">The action entry in this collection.</param>
            <returns>true if this collection contains an action with the specified name; otherwise, false.</returns>
        </member>
        <member name="T:Microsoft.Teams.AI.AI.Action.IActionHandler`1">
            <summary>
            Handler to perform the action.
            </summary>
            <typeparam name="TState">Type of the turn state.</typeparam>
        </member>
        <member name="M:Microsoft.Teams.AI.AI.Action.IActionHandler`1.PerformAction(Microsoft.Bot.Builder.ITurnContext,`0,System.Object,System.String)">
            <summary>
            Perform the action.
            </summary>
            <param name="turnContext">Current turn context.</param>
            <param name="turnState">Current turn state.</param>
            <param name="entities">Optional enti to be used to perform the action.</param>
            <param name="action">The actual action name.</param>
            <returns>True if continue executing, otherwise false.</returns>
        </member>
        <member name="T:Microsoft.Teams.AI.AI.AI`1">
            <summary>
            AI System.
            </summary>
            <remarks>
            The AI system is responsible for generating plans, moderating input and output, and
            generating prompts. It can be used free standing or routed to by the Application object.
            </remarks>
            <typeparam name="TState">Optional. Type of the turn state.</typeparam>
        </member>
        <member name="M:Microsoft.Teams.AI.AI.AI`1.#ctor(Microsoft.Teams.AI.AI.AIOptions{`0},Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Creates an instance of the <see cref="T:Microsoft.Teams.AI.AI.AI`1"/> class.
            </summary>
            <param name="options">The options to configure.</param>
            <param name="loggerFactory">Optional. The logger factory to use.</param>
        </member>
        <member name="P:Microsoft.Teams.AI.AI.AI`1.Moderator">
            <summary>
            Returns the moderator being used by the AI system.
            </summary>
            <remarks>
            The default moderator simply allows all messages and plans through without intercepting them.
            </remarks>
        </member>
        <member name="P:Microsoft.Teams.AI.AI.AI`1.Options">
            <summary>
            Returns the options for the AI system.
            </summary>
        </member>
        <member name="P:Microsoft.Teams.AI.AI.AI`1.Planner">
            <summary>
            Returns the planner being used by the AI system.
            </summary>
        </member>
        <member name="P:Microsoft.Teams.AI.AI.AI`1.Prompts">
            <summary>
            Returns the prompt manager being used by the AI system.
            </summary>
        </member>
        <member name="M:Microsoft.Teams.AI.AI.AI`1.RegisterAction(System.String,Microsoft.Teams.AI.AI.Action.IActionHandler{`0},System.Boolean)">
            <summary>
            Registers a handler for a named action.
            </summary>
            <remarks>
            The AI systems planner returns plans that are made up of a series of commands or actions
            that should be performed. Registering a handler lets you provide code that should be run in
            response to one of the predicted actions.
            
            Plans support a DO command which specifies the name of an action to call and an optional
            set of entities that should be passed to the action. The internal plan executor will call
            the registered handler for the action passing in the current context, state, and entities.
            
            Additionally, the AI system itself uses actions to handle things like unknown actions,
            flagged input, and flagged output. You can override these actions by registering your own
            handler for them. The names of the built-in actions are available as static properties on
            the AI class.
            </remarks>
            <param name="name">The name of the action.</param>
            <param name="handler">The action handler function.</param>
            <param name="allowOverrides">Whether or not this action's properties can be overriden.</param>
            <returns>The current instance object.</returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:Microsoft.Teams.AI.AI.AI`1.RegisterAction(Microsoft.Teams.AI.AI.Action.ActionEntry{`0})">
            <summary>
            Register an action into the AI module.
            </summary>
            <param name="action"></param>
            <returns>The current instance object.</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.AI.AI`1.ImportActions(System.Object)">
            <summary>
            Import a set of Actions from the given class instance. The functions must have the `Action` attribute.
            Once these functions are imported, the AI module will have access to these functions.
            </summary>
            <param name="instance">Instance of a class containing these functions.</param>
            <returns>The current instance object.</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.AI.AI`1.ChainAsync(Microsoft.Bot.Builder.ITurnContext,`0,System.String,Microsoft.Teams.AI.AI.AIOptions{`0},System.Threading.CancellationToken)">
            <summary>
            Chains into another prompt and executes the plan that is returned.
            </summary>
            <remarks>
            This method is used to chain into another prompt. It will call the prompt manager to
            get the plan for the prompt and then execute the plan. The return value indicates whether
            that plan was completely executed or not, and can be used to make decisions about whether the
            outer plan should continue executing.
            </remarks>
            <param name="turnContext">Current turn context.</param>
            <param name="turnState">Current turn state.</param>
            <param name="prompt">Optional. Prompt name or prompt template to use. If omitted, the AI systems default prompt will be used.</param>
            <param name="options">Optional. Override options for the prompt. If omitted, the AI systems configured options will be used.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
            <returns>True if the plan was completely executed, otherwise false.</returns>
            <exception cref="T:System.InvalidOperationException">This exception is thrown when an unknown (not  DO or SAY) command is predicted.</exception>
        </member>
        <member name="M:Microsoft.Teams.AI.AI.AI`1.ChainAsync(Microsoft.Bot.Builder.ITurnContext,`0,Microsoft.Teams.AI.AI.Prompt.PromptTemplate,Microsoft.Teams.AI.AI.AIOptions{`0},System.Threading.CancellationToken)">
            <summary>
            Chains into another prompt and executes the plan that is returned.
            </summary>
            <remarks>
            This method is used to chain into another prompt. It will call the prompt manager to
            get the plan for the prompt and then execute the plan. The return value indicates whether
            that plan was completely executed or not, and can be used to make decisions about whether the
            outer plan should continue executing.
            </remarks>
            <param name="turnContext">Current turn context.</param>
            <param name="turnState">Current turn state.</param>
            <param name="prompt">Optional. Prompt template to use.</param>
            <param name="options">Optional. Override options for the prompt. If omitted, the AI systems configured options will be used.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
            <returns>True if the plan was completely executed, otherwise false.</returns>
            <exception cref="T:System.InvalidOperationException">This exception is thrown when an unknown (not  DO or SAY) command is predicted.</exception>
        </member>
        <member name="M:Microsoft.Teams.AI.AI.AI`1.CompletePromptAsync(Microsoft.Bot.Builder.ITurnContext,`0,Microsoft.Teams.AI.AI.Prompt.PromptTemplate,Microsoft.Teams.AI.AI.AIOptions{`0},System.Threading.CancellationToken)">
            <summary>
            A helper method to complete a prompt using the configured prompt manager.
            </summary>
            <param name="turnContext">Current turn context.</param>
            <param name="turnState">Current turn state.</param>
            <param name="promptTemplate">Prompt template to use.</param>
            <param name="options">Optional. Override options for the prompt. If omitted, the AI systems configured options will be used.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Microsoft.Teams.AI.AI.AI`1.CompletePromptAsync(Microsoft.Bot.Builder.ITurnContext,`0,System.String,Microsoft.Teams.AI.AI.AIOptions{`0},System.Threading.CancellationToken)">
            <summary>
            A helper method to complete a prompt using the configured prompt manager.
            </summary>
            <param name="turnContext">Current turn context.</param>
            <param name="turnState">Current turn state.</param>
            <param name="name">Prompt name to use</param>
            <param name="options">Optional. Override options for the prompt. If omitted, the AI systems configured options will be used.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        </member>
        <member name="M:Microsoft.Teams.AI.AI.AI`1.CreateSemanticFunction(System.String,Microsoft.Teams.AI.AI.Prompt.PromptTemplate,Microsoft.Teams.AI.AI.AIOptions{`0})">
            <summary>
            Creates a semantic function that can be registered with the app's prompt manager.
            </summary>
            <remarks>
            Semantic functions are functions that make model calls and return their results as template
            parameters to other prompts. For example, you could define a semantic function called
            'translator' that first translates the user's input to English before calling your main prompt:
            <br/><br/>
            <c>
            app.AI.Prompts.AddFunction('translator', app.AI.CreateSemanticFunction('translator-prompt'));
            </c>
            <br/><br/>
            You would then create a prompt called "translator-prompt" that does the translation and then in
            your main prompt you can call it using the template expression `{{translator}}`.
            </remarks>
            <param name="name">Prompt to use. If template is provided then this name will be assigned to it in the prompt manager.</param>
            <param name="template">Optional. Prompt template to use.</param>
            <param name="options">Optional. Override options for the prompt. If omitted, the AI systems configured options will be used.</param>
            <returns>A prompt function.</returns>
        </member>
        <member name="T:Microsoft.Teams.AI.AI.AIConstants">
            <summary>
            The constants used by the AI system.
            </summary>
        </member>
        <member name="F:Microsoft.Teams.AI.AI.AIConstants.Plan">
            <summary>
            The type of command that will be used to plan an action.
            </summary>
        </member>
        <member name="F:Microsoft.Teams.AI.AI.AIConstants.DoCommand">
            <summary>
            The type of command that will be used to do an action.
            </summary>
        </member>
        <member name="F:Microsoft.Teams.AI.AI.AIConstants.SayCommand">
            <summary>
            The type of command that will be used to say something.
            </summary>
        </member>
        <member name="F:Microsoft.Teams.AI.AI.AIConstants.UnknownActionName">
            <summary>
            An action that will be called anytime an unknown action is predicted by the planner.
            </summary>
            <remarks>
            The default behavior is to simply log an error to the console. The plan is allowed to
            continue execution by default.
            </remarks>
        </member>
        <member name="F:Microsoft.Teams.AI.AI.AIConstants.FlaggedInputActionName">
            <summary>
            An action that will be called anytime an input is flagged by the moderator.
            </summary>
            <remarks>
            The default behavior is to simply log an error to the console. Override to send a custom
            message to the user.
            </remarks>
        </member>
        <member name="F:Microsoft.Teams.AI.AI.AIConstants.FlaggedOutputActionName">
            <summary>
            An action that will be called anytime an output is flagged by the moderator.
            </summary>
            <remarks>
            The default behavior is to simply log an error to the console. Override to send a custom
            message to the user.
            </remarks>
        </member>
        <member name="F:Microsoft.Teams.AI.AI.AIConstants.RateLimitedActionName">
            <summary>
            An action that will be called anytime the planner is rate limited.
            </summary>
        </member>
        <member name="F:Microsoft.Teams.AI.AI.AIConstants.PlanReadyActionName">
            <summary>
            An action that will be called after the plan has been predicted by the planner and it has
            passed moderation.
            </summary>
            <remarks>
            Overriding this action lets you customize the decision to execute a plan separately from the
            moderator. The default behavior is to proceed with the plans execution only when a plan
            contains one or more commands. Returning false from this action can be used to prevent the plan
            from being executed.
            </remarks>
        </member>
        <member name="F:Microsoft.Teams.AI.AI.AIConstants.DoCommandActionName">
             <summary>
             An action that is called to DO an action.
             </summary>
             <remarks>
             The action system is used to do other actions. Overriding this action lets you customize the
             execution of an individual action. You can use it to log actions being used or to prevent
             certain actions from being executed based on policy.
            
             The default behavior is to simply execute the action handler passed in so you will need to
             perform that logic yourself should you override this action.
             </remarks>
        </member>
        <member name="F:Microsoft.Teams.AI.AI.AIConstants.SayCommandActionName">
             <summary>
             An action that is called to SAY something.
             </summary>
             <remarks>
             Overriding this action lets you customize the execution of the SAY command. You can use it
             to log the output being generated or to add support for sending certain types of output as
             message attachments.
            
             The default behavior attempts to look for an Adaptive Card in the output and if found sends
             it as an attachment. If no Adaptive Card is found then the output is sent as a plain text
             message.
            
             If you override this action and want to automatically send Adaptive Cards as attachments you
             will need to handle that yourself.
             </remarks>
        </member>
        <member name="T:Microsoft.Teams.AI.AI.AIHistoryOptions">
            <summary>
            Options for the AI system.
            </summary>
        </member>
        <member name="P:Microsoft.Teams.AI.AI.AIHistoryOptions.TrackHistory">
            <summary>
            Whether the AI system should track conversation history.
            </summary>
            <remarks>
            Defaults to true
            </remarks>
        </member>
        <member name="P:Microsoft.Teams.AI.AI.AIHistoryOptions.MaxTurns">
            <summary>
            The maximum number of turns to remember.
            </summary>
            <remarks>
            Defaults to 3.
            </remarks>
        </member>
        <member name="P:Microsoft.Teams.AI.AI.AIHistoryOptions.MaxTokens">
            <summary>
            The maximum number of tokens worth of history to add to the prompt.
            </summary>
            <remarks>
            Defaults to 1000.
            </remarks>
        </member>
        <member name="P:Microsoft.Teams.AI.AI.AIHistoryOptions.LineSeparator">
            <summary>
            The line separator to use when concatenating history.
            </summary>
            <remarks>
            Defaults to '\n'.
            </remarks>
        </member>
        <member name="P:Microsoft.Teams.AI.AI.AIHistoryOptions.UserPrefix">
            <summary>
            The prefix to use for user history.
            </summary>
            <remarks>
            Defaults to 'User:'.
            </remarks>
        </member>
        <member name="P:Microsoft.Teams.AI.AI.AIHistoryOptions.AssistantPrefix">
            <summary>
            The prefix to use for assistant history.
            </summary>
            <remarks>
            Defaults to 'Assistant:'.
            </remarks>
        </member>
        <member name="P:Microsoft.Teams.AI.AI.AIHistoryOptions.AssistantHistoryType">
            <summary>
            Whether the conversation history should include the plan object returned by the model or
            just the text of any SAY commands.
            </summary>
            <remarks>
            Defaults to 'planObject'.
            </remarks>
        </member>
        <member name="T:Microsoft.Teams.AI.AI.AssistantHistoryType">
            <summary>
            The type of assistant history to include in the conversation history.
            </summary>
        </member>
        <member name="F:Microsoft.Teams.AI.AI.AssistantHistoryType.Text">
            <summary>
            Text of any SAY commands.
            </summary>
        </member>
        <member name="F:Microsoft.Teams.AI.AI.AssistantHistoryType.PlanObject">
            <summary>
            The plan object returned by the model.
            </summary>
        </member>
        <member name="T:Microsoft.Teams.AI.AI.AIOptions`1">
            <summary>
            Options for configuring the AI system.
            </summary>
            <typeparam name="TState">The turn state class.</typeparam>
        </member>
        <member name="P:Microsoft.Teams.AI.AI.AIOptions`1.Planner">
            <summary>
            The planner to use for generating plans.
            </summary>
        </member>
        <member name="P:Microsoft.Teams.AI.AI.AIOptions`1.PromptManager">
            <summary>
            The prompt manager to use for generating prompts.
            </summary>
        </member>
        <member name="P:Microsoft.Teams.AI.AI.AIOptions`1.Moderator">
            <summary>
            Optional. The moderator to use for moderating input passed to the model and the output
            returned by the model.
            </summary>
        </member>
        <member name="F:Microsoft.Teams.AI.AI.AIOptions`1.Prompt">
            <summary>
            Optional. The prompt to use for the current turn.
            </summary>
            <remarks>
            This allows for the use of the AI system in a free standing mode. An exception will be
            thrown if the AI system is routed to by the Application object and a prompt has not been
            configured.
            </remarks>
        </member>
        <member name="F:Microsoft.Teams.AI.AI.AIOptions`1.History">
            <summary>
            Optional. The history options to use for the AI system
            </summary>
            <remarks>
            Defaults to tracking history with a maximum of 3 turns and 1000 tokens per turn.
            </remarks>
        </member>
        <member name="M:Microsoft.Teams.AI.AI.AIOptions`1.#ctor(Microsoft.Teams.AI.AI.Planner.IPlanner{`0},Microsoft.Teams.AI.AI.Prompt.IPromptManager{`0},Microsoft.Teams.AI.AI.Moderator.IModerator{`0},System.String,Microsoft.Teams.AI.AI.AIHistoryOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Teams.AI.AI.AIOptions`1"/> class.
            </summary>
            <param name="planner">The planner to use for generating plans.</param>
            <param name="promptManager">The prompt manager to use for generating prompts.</param>
            <param name="moderator"> The moderator to use for moderating input passed to the model and the output</param>
            <param name="prompt">Optional. The prompt to use for the current turn.</param>
            <param name="history">Optional. The history options to use for the AI system.</param>
        </member>
        <member name="T:Microsoft.Teams.AI.AI.Moderator.AzureContentSafetyModerator`1">
            <summary>
            An moderator that uses Azure Content Safety API.
            </summary>
            <typeparam name="TState">The turn state class.</typeparam>
        </member>
        <member name="M:Microsoft.Teams.AI.AI.Moderator.AzureContentSafetyModerator`1.#ctor(Microsoft.Teams.AI.AI.Moderator.AzureContentSafetyModeratorOptions)">
            <summary>
            Constructs an instance of the moderator.
            </summary>
            <param name="options">Options to configure the moderator.</param>
        </member>
        <member name="M:Microsoft.Teams.AI.AI.Moderator.AzureContentSafetyModerator`1.ReviewPrompt(Microsoft.Bot.Builder.ITurnContext,`0,Microsoft.Teams.AI.AI.Prompt.PromptTemplate)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Teams.AI.AI.Moderator.AzureContentSafetyModerator`1.ReviewPlan(Microsoft.Bot.Builder.ITurnContext,`0,Microsoft.Teams.AI.AI.Planner.Plan)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.Teams.AI.AI.Moderator.AzureContentSafetyModeratorOptions">
            <summary>
            Options for the Azure Content Safety moderator.
            </summary>
        </member>
        <member name="P:Microsoft.Teams.AI.AI.Moderator.AzureContentSafetyModeratorOptions.ApiKey">
            <summary>
            Azure Content Safety API key.
            </summary>
        </member>
        <member name="P:Microsoft.Teams.AI.AI.Moderator.AzureContentSafetyModeratorOptions.Endpoint">
            <summary>
            Azure Content Safety API endpoint.
            </summary>
        </member>
        <member name="P:Microsoft.Teams.AI.AI.Moderator.AzureContentSafetyModeratorOptions.Moderate">
            <summary>
            Which parts of the conversation to moderate
            </summary>
        </member>
        <member name="P:Microsoft.Teams.AI.AI.Moderator.AzureContentSafetyModeratorOptions.SeverityLevel">
            <summary>
            The severity level that triggers a flagged response. Default value is 2.
            </summary>
        </member>
        <member name="P:Microsoft.Teams.AI.AI.Moderator.AzureContentSafetyModeratorOptions.Categories">
            <summary>
            The categories will be analyzed. If not assigned, a default set of the categories' analysis results will be returned.
            </summary>
        </member>
        <member name="P:Microsoft.Teams.AI.AI.Moderator.AzureContentSafetyModeratorOptions.BlocklistNames">
            <summary>
            The names of blocklists.
            </summary>
        </member>
        <member name="P:Microsoft.Teams.AI.AI.Moderator.AzureContentSafetyModeratorOptions.BreakByBlocklists">
            <summary>
            When set to true, further analyses of harmful content will not be performed in cases where blocklists are hit. When set to false, all analyses of harmful content will be performed, whether or not blocklists are hit.
            </summary>
        </member>
        <member name="M:Microsoft.Teams.AI.AI.Moderator.AzureContentSafetyModeratorOptions.#ctor(System.String,System.String,Microsoft.Teams.AI.AI.Moderator.ModerationType)">
            <summary>
            Create an instance of the AzureContentSafetyModeratorOptions class.
            </summary>
            <param name="apiKey">Azure Content Safety API key.</param>
            <param name="endpoint">Azure Content Safety endpoint.</param>
            <param name="moderate">Which parts of the conversation to moderate.</param>
        </member>
        <member name="T:Microsoft.Teams.AI.AI.Moderator.DefaultModerator`1">
            <summary>
            The default moderator that does nothing. Used when no moderator is specified.
            </summary>
            <typeparam name="TState">The turn state class.</typeparam>
        </member>
        <member name="M:Microsoft.Teams.AI.AI.Moderator.DefaultModerator`1.ReviewPlan(Microsoft.Bot.Builder.ITurnContext,`0,Microsoft.Teams.AI.AI.Planner.Plan)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Teams.AI.AI.Moderator.DefaultModerator`1.ReviewPrompt(Microsoft.Bot.Builder.ITurnContext,`0,Microsoft.Teams.AI.AI.Prompt.PromptTemplate)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.Teams.AI.AI.Moderator.IModerator`1">
            <summary>
            A moderator is responsible for reviewing and approving AI prompts and plans.
            </summary>
            <typeparam name="TState">Type of the applications turn state.</typeparam>
        </member>
        <member name="M:Microsoft.Teams.AI.AI.Moderator.IModerator`1.ReviewPrompt(Microsoft.Bot.Builder.ITurnContext,`0,Microsoft.Teams.AI.AI.Prompt.PromptTemplate)">
             <summary>
             Reviews an incoming utterance and generated prompt before it's sent to the planner.
             </summary>
             <remarks>
             The moderator can review the incoming utterance for things like prompt injection attacks
             or the leakage of sensitive information. The moderator can also review the generated prompt
             to ensure it's appropriate for the current conversation.
            
             To approve a prompt, simply return null. Returning a new plan bypasses the planner and
             redirects to a new set of actions. Typically the moderator will return a new plan with a
             single DO command that calls <see cref="F:Microsoft.Teams.AI.AI.AIConstants.FlaggedInputActionName"/> to flag the input for review.
            
             The moderator can pass any entities that make sense to the redirected action.
             </remarks>
             <param name="turnContext">Context for the current turn of conversation.</param>
             <param name="turnState">Application state for the current turn of conversation.</param>
             <param name="prompt">Generated prompt to be reviewed.</param>
             <returns>A null value to approve the prompt or a new plan to redirect to if not approved.</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.AI.Moderator.IModerator`1.ReviewPlan(Microsoft.Bot.Builder.ITurnContext,`0,Microsoft.Teams.AI.AI.Planner.Plan)">
             <summary>
             Reviews a plan generated by the planner before its executed.
             </summary>
             <remarks>
             The moderator can review the plan to ensure it's appropriate for the current conversation.
            
             To approve a plan simply return the plan that was passed in. A new plan can be returned to
             redirect to a new set of actions. Typically the moderator will return a new plan with a
             single DO command that calls <see cref="F:Microsoft.Teams.AI.AI.AIConstants.FlaggedOutputActionName"/> to flag the output for review.
            
             The moderator can pass any entities that make sense to the redirected action.
             </remarks>
             <param name="turnContext">Context for the current turn of conversation.</param>
             <param name="turnState">Application state for the current turn of conversation.</param>
             <param name="plan">Plan generated by the planner.</param>
             <returns>The plan to execute. Either the current plan passed in for review or a new plan.</returns>
        </member>
        <member name="T:Microsoft.Teams.AI.AI.Moderator.ModerationResponse">
            <summary>
            The result from the OpenAI's moderation API call.
            </summary>
        </member>
        <member name="P:Microsoft.Teams.AI.AI.Moderator.ModerationResponse.Id">
            <summary>
            The ID of the moderation request.
            </summary>
        </member>
        <member name="P:Microsoft.Teams.AI.AI.Moderator.ModerationResponse.Model">
            <summary>
            The OpenAI model used for the moderation request.
            </summary>
        </member>
        <member name="P:Microsoft.Teams.AI.AI.Moderator.ModerationResponse.Results">
            <summary>
            The list of moderation results.
            </summary>
        </member>
        <member name="T:Microsoft.Teams.AI.AI.Moderator.ModerationResult">
            <summary>
            The result item from the OpenAI's moderation API call.
            </summary>
        </member>
        <member name="P:Microsoft.Teams.AI.AI.Moderator.ModerationResult.CategoriesFlagged">
            <summary>
            The OpenAI categories and whether they were flagged or not.
            </summary>
        </member>
        <member name="P:Microsoft.Teams.AI.AI.Moderator.ModerationResult.CategoryScores">
            <summary>
            Per category scores denoting model's confidence that input violates OpenAI's policy for the category.
            </summary>
            <remarks>
            Higher score means higher confidence that input violates the policy.
            </remarks>
        </member>
        <member name="P:Microsoft.Teams.AI.AI.Moderator.ModerationResult.Flagged">
            <summary>
            Whether the input was flagged or not.
            </summary>
            <remarks>
            True means content violates OpenAI's policy. Otherwise false.
            </remarks>
        </member>
        <member name="T:Microsoft.Teams.AI.AI.Moderator.ModerationCategoriesFlagged">
            <summary>
            Per category scores denoting model's confidence that input violates OpenAI's policy for the category.
            </summary>
            <remarks>
            Higher score means higher confidence that input violates the policy.
            </remarks>
        </member>
        <member name="P:Microsoft.Teams.AI.AI.Moderator.ModerationCategoriesFlagged.Hate">
            <summary>
            Whether input violates OpenAI's policy for the "hate" category.
            </summary>
            <remarks>
            Content that expresses, incites, or promotes hate based on race, gender, ethnicity, religion, nationality, sexual orientation, disability status, or caste. Hateful content aimed at non-protected groups (e.g., chess players) is not covered by this category.
            </remarks>
        </member>
        <member name="P:Microsoft.Teams.AI.AI.Moderator.ModerationCategoriesFlagged.HateThreatening">
            <summary>
            Whether input violates OpenAI's policy for the "hate/threatening" category.
            </summary>
            <remarks>
            Hateful content that also includes violence or serious harm towards the targeted group.
            </remarks>
        </member>
        <member name="P:Microsoft.Teams.AI.AI.Moderator.ModerationCategoriesFlagged.SelfHarm">
            <summary>
            Whether input violates OpenAI's policy for the "self-harm" category.
            </summary>
            <remarks>
            Content that promotes, encourages, or depicts acts of self-harm, such as suicide, cutting, and eating disorders.
            </remarks>
        </member>
        <member name="P:Microsoft.Teams.AI.AI.Moderator.ModerationCategoriesFlagged.Sexual">
            <summary>
            Whether input violates OpenAI's policy for the "sexual" category.
            </summary>
            <remarks>
            Content meant to arouse sexual excitement, such as the description of sexual activity, or that promotes sexual services (excluding sex education and wellness).
            </remarks>
        </member>
        <member name="P:Microsoft.Teams.AI.AI.Moderator.ModerationCategoriesFlagged.SexualMinors">
            <summary>
            Whether input violates OpenAI's policy for the "sexual/minors" category.
            </summary>
            <remarks>
            Sexual content that includes an individual who is under 18 years old.
            </remarks>
        </member>
        <member name="P:Microsoft.Teams.AI.AI.Moderator.ModerationCategoriesFlagged.Violence">
            <summary>
            Whether input violates OpenAI's policy for the "violence" category.
            </summary>
            <remarks>
            Content that promotes or glorifies violence or celebrates the suffering or humiliation of others.
            </remarks>
        </member>
        <member name="P:Microsoft.Teams.AI.AI.Moderator.ModerationCategoriesFlagged.ViolenceGraphic">
            <summary>
            Whether input violates OpenAI's policy for the "violence/graphic" category.
            </summary>
            <remarks>
            Violent content that depicts death, violence, or serious physical injury in extreme graphic detail.
            </remarks>
        </member>
        <member name="T:Microsoft.Teams.AI.AI.Moderator.ModerationCategoryScores">
            <summary>
            Per category scores denoting model's confidence that input violates OpenAI's policy for the category.
            </summary>
            <remarks>
            Higher score means higher confidence that input violates the policy.
            </remarks>
        </member>
        <member name="P:Microsoft.Teams.AI.AI.Moderator.ModerationCategoryScores.Hate">
            <summary>
            Model's confidence that the input violates the OpenAI's policy for the category. Higher score denotes greater confidence.
            </summary>
            <remarks>
            Content that expresses, incites, or promotes hate based on race, gender, ethnicity, religion, nationality, sexual orientation, disability status, or caste. Hateful content aimed at non-protected groups (e.g., chess players) is not covered by this category.
            </remarks>
        </member>
        <member name="P:Microsoft.Teams.AI.AI.Moderator.ModerationCategoryScores.HateThreatening">
            <summary>
            Model's confidence that the input violates the OpenAI's policy for the category. Higher score denotes greater confidence.
            </summary>
            <remarks>
            Hateful content that also includes violence or serious harm towards the targeted group.
            </remarks>
        </member>
        <member name="P:Microsoft.Teams.AI.AI.Moderator.ModerationCategoryScores.SelfHarm">
            <summary>
            Model's confidence that the input violates the OpenAI's policy for the category. Higher score denotes greater confidence.
            </summary>
            <remarks>
            Content that promotes, encourages, or depicts acts of self-harm, such as suicide, cutting, and eating disorders.
            </remarks>
        </member>
        <member name="P:Microsoft.Teams.AI.AI.Moderator.ModerationCategoryScores.Sexual">
            <summary>
            Model's confidence that the input violates the OpenAI's policy for the category. Higher score denotes greater confidence.
            </summary>
            <remarks>
            Content meant to arouse sexual excitement, such as the description of sexual activity, or that promotes sexual services (excluding sex education and wellness).
            </remarks>
        </member>
        <member name="P:Microsoft.Teams.AI.AI.Moderator.ModerationCategoryScores.SexualMinors">
            <summary>
            Model's confidence that the input violates the OpenAI's policy for the category. Higher score denotes greater confidence.
            </summary>
            <remarks>
            Sexual content that includes an individual who is under 18 years old.
            </remarks>
        </member>
        <member name="P:Microsoft.Teams.AI.AI.Moderator.ModerationCategoryScores.Violence">
            <summary>
            Model's confidence that the input violates the OpenAI's policy for the category. Higher score denotes greater confidence.
            </summary>
            <remarks>
            Content that promotes or glorifies violence or celebrates the suffering or humiliation of others.
            </remarks>
        </member>
        <member name="P:Microsoft.Teams.AI.AI.Moderator.ModerationCategoryScores.ViolenceGraphic">
            <summary>
            Model's confidence that the input violates the OpenAI's policy for the category. Higher score denotes greater confidence.
            </summary>
            <remarks>
            Violent content that depicts death, violence, or serious physical injury in extreme graphic detail.
            </remarks>
        </member>
        <member name="T:Microsoft.Teams.AI.AI.Moderator.OpenAIModerator`1">
            <summary>
            An moderator that uses OpenAI's moderation API.
            </summary>
            <typeparam name="TState">The turn state class.</typeparam>
        </member>
        <member name="M:Microsoft.Teams.AI.AI.Moderator.OpenAIModerator`1.#ctor(Microsoft.Teams.AI.AI.Moderator.OpenAIModeratorOptions,Microsoft.Extensions.Logging.ILoggerFactory,System.Net.Http.HttpClient)">
            <summary>
            Constructs an instance of the moderator.
            </summary>
            <param name="options">Options to configure the moderator</param>
            <param name="loggerFactory">The logger factory instance</param>
            <param name="httpClient">HTTP client.</param>
        </member>
        <member name="M:Microsoft.Teams.AI.AI.Moderator.OpenAIModerator`1.ReviewPrompt(Microsoft.Bot.Builder.ITurnContext,`0,Microsoft.Teams.AI.AI.Prompt.PromptTemplate)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Teams.AI.AI.Moderator.OpenAIModerator`1.ReviewPlan(Microsoft.Bot.Builder.ITurnContext,`0,Microsoft.Teams.AI.AI.Planner.Plan)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.Teams.AI.AI.Moderator.OpenAIModeratorOptions">
            <summary>
            Options for the OpenAI Moderator.
            </summary>
        </member>
        <member name="P:Microsoft.Teams.AI.AI.Moderator.OpenAIModeratorOptions.ApiKey">
            <summary>
            OpenAI API key.
            </summary>
        </member>
        <member name="P:Microsoft.Teams.AI.AI.Moderator.OpenAIModeratorOptions.Moderate">
            <summary>
            Which parts of the conversation to moderate.
            </summary>
        </member>
        <member name="P:Microsoft.Teams.AI.AI.Moderator.OpenAIModeratorOptions.Organization">
            <summary>
            Optional. OpenAI organization.
            </summary>
        </member>
        <member name="P:Microsoft.Teams.AI.AI.Moderator.OpenAIModeratorOptions.Endpoint">
            <summary>
            Optional. OpenAI endpoint.
            </summary>
        </member>
        <member name="P:Microsoft.Teams.AI.AI.Moderator.OpenAIModeratorOptions.Model">
            <summary>
            The moderation model to use.
            </summary>
        </member>
        <member name="M:Microsoft.Teams.AI.AI.Moderator.OpenAIModeratorOptions.#ctor(System.String,Microsoft.Teams.AI.AI.Moderator.ModerationType)">
            <summary>
            Create an instance of the OpenAIModeratorOptions class.
            </summary>
            <param name="apiKey">OpenAI API key.</param>
            <param name="moderate">Which parts of the conversation to moderate.</param>
        </member>
        <member name="T:Microsoft.Teams.AI.AI.Moderator.ModerationType">
            <summary>
            Which parts of the conversation to moderate.
            </summary>
        </member>
        <member name="F:Microsoft.Teams.AI.AI.Moderator.ModerationType.Input">
            <summary>
            Only moderate input.
            </summary>
        </member>
        <member name="F:Microsoft.Teams.AI.AI.Moderator.ModerationType.Output">
            <summary>
            Only moderate output.
            </summary>
        </member>
        <member name="F:Microsoft.Teams.AI.AI.Moderator.ModerationType.Both">
            <summary>
            Moderate both input and output.
            </summary>
        </member>
        <member name="T:Microsoft.Teams.AI.AI.OpenAI.OpenAIClient">
            <summary>
            The client to make calls to OpenAI's API
            </summary>
        </member>
        <member name="M:Microsoft.Teams.AI.AI.OpenAI.OpenAIClient.#ctor(Microsoft.Teams.AI.AI.OpenAI.OpenAIClientOptions,Microsoft.Extensions.Logging.ILoggerFactory,System.Net.Http.HttpClient)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Teams.AI.AI.OpenAI.OpenAIClient"/> class.
            </summary>
            <param name="options">The OpenAI client options.</param>
            <param name="loggerFactory">Optional. The logger factory instance.</param>
            <param name="httpClient">Optional. The HTTP client instance.</param>
        </member>
        <member name="M:Microsoft.Teams.AI.AI.OpenAI.OpenAIClient.ExecuteTextModeration(System.String,System.String)">
            <summary>
            Make a call to the OpenAI text moderation endpoint.
            </summary>
            <param name="text">The input text to moderate.</param>
            <param name="model">The moderation model to use.</param>
            <returns>The moderation result from the API call.</returns>
            <exception cref="T:Microsoft.Teams.AI.Exceptions.HttpOperationException" />
        </member>
        <member name="T:Microsoft.Teams.AI.AI.OpenAI.OpenAIClientOptions">
            <summary>
            Options for the OpenAI client.
            </summary>
        </member>
        <member name="P:Microsoft.Teams.AI.AI.OpenAI.OpenAIClientOptions.ApiKey">
            <summary>
            OpenAI API key.
            </summary>
        </member>
        <member name="P:Microsoft.Teams.AI.AI.OpenAI.OpenAIClientOptions.Organization">
            <summary>
            Optional. OpenAI organization.
            </summary>
        </member>
        <member name="M:Microsoft.Teams.AI.AI.OpenAI.OpenAIClientOptions.#ctor(System.String)">
            <summary>
            Create an instance of the OpenAIModeratorOptions class.
            </summary>
            <param name="apiKey">OpenAI API key.</param>
        </member>
        <member name="T:Microsoft.Teams.AI.AI.Planner.AzureOpenAIPlanner`1">
            <summary>
            Planner that uses the Azure OpenAI service.
            </summary>
            <typeparam name="TState">Type of the applications turn state</typeparam>
        </member>
        <member name="M:Microsoft.Teams.AI.AI.Planner.AzureOpenAIPlanner`1.#ctor(Microsoft.Teams.AI.AI.Planner.AzureOpenAIPlannerOptions,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Teams.AI.AI.Planner.AzureOpenAIPlanner`1"/> class.
            </summary>
            <param name="options">The options to configure the planner.</param>
            <param name="loggerFactory">The logger factory instance.</param>
        </member>
        <member name="T:Microsoft.Teams.AI.AI.Planner.AzureOpenAIPlannerOptions">
            <summary>
            Additional options needed to use the Azure OpenAI service.
            </summary>
            <remarks>
            The Azure OpenAI API version is set to latest by default.
            </remarks>
        </member>
        <member name="P:Microsoft.Teams.AI.AI.Planner.AzureOpenAIPlannerOptions.Endpoint">
            <summary>
            Endpoint for your Azure OpenAI deployment.
            </summary>
        </member>
        <member name="M:Microsoft.Teams.AI.AI.Planner.AzureOpenAIPlannerOptions.#ctor(System.String,System.String,System.String)">
            <summary>
            Create an instance of the OpenAIPlannerOptions class.
            </summary>
            <param name="apiKey">OpenAI API key.</param>
            <param name="defaultModel">The default model to use. This should be the model deployment name, not the model</param>
            <param name="endpoint">Endpoint for your Azure OpenAI deployment.</param>
        </member>
        <member name="T:Microsoft.Teams.AI.AI.Planner.ConversationHistory">
            <summary>
            Class that provides utility methods for working with conversation history.
            </summary>
        </member>
        <member name="F:Microsoft.Teams.AI.AI.Planner.ConversationHistory.StatePropertyName">
            <summary>
            The name of the conversation state property that stores the conversation history.
            </summary>
        </member>
        <member name="M:Microsoft.Teams.AI.AI.Planner.ConversationHistory.AddLine(Microsoft.Teams.AI.State.ITurnState{Microsoft.Teams.AI.State.StateBase,Microsoft.Teams.AI.State.StateBase,Microsoft.Teams.AI.State.TempState},System.String,System.Int32)">
            <summary>
            Adds a new line of text to conversation history
            </summary>
            <param name="turnState">Applications turn state.</param>
            <param name="line">Line of text to add to history.</param>
            <param name="maxLines">Optional. Maximum number of lines to store. Defaults to 10.</param>
        </member>
        <member name="M:Microsoft.Teams.AI.AI.Planner.ConversationHistory.AppendToLastLine(Microsoft.Teams.AI.State.ITurnState{Microsoft.Teams.AI.State.StateBase,Microsoft.Teams.AI.State.StateBase,Microsoft.Teams.AI.State.TempState},System.String)">
            <summary>
            Appends text to the last line of conversation history.
            </summary>
            <param name="turnState">The turn state.</param>
            <param name="text">The input text.</param>
        </member>
        <member name="M:Microsoft.Teams.AI.AI.Planner.ConversationHistory.Clear(Microsoft.Teams.AI.State.ITurnState{Microsoft.Teams.AI.State.StateBase,Microsoft.Teams.AI.State.StateBase,Microsoft.Teams.AI.State.TempState})">
            <summary>
            Clears all conversation history for the current conversation.
            </summary>
            <param name="turnState">Applications turn state.</param>
        </member>
        <member name="M:Microsoft.Teams.AI.AI.Planner.ConversationHistory.HasMoreLines(Microsoft.Teams.AI.State.ITurnState{Microsoft.Teams.AI.State.StateBase,Microsoft.Teams.AI.State.StateBase,Microsoft.Teams.AI.State.TempState})">
            <summary>
            Checks to see if one or more lines of history has persisted.
            </summary>
            <param name="turnState">Applications turn state.</param>
            <returns>True if there are 1 or more lines of history.</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.AI.Planner.ConversationHistory.GetLastLine(Microsoft.Teams.AI.State.ITurnState{Microsoft.Teams.AI.State.StateBase,Microsoft.Teams.AI.State.StateBase,Microsoft.Teams.AI.State.TempState})">
            <summary>
            Returns the last line of history.
            </summary>
            <param name="turnState">Applications turn state.</param>
            <returns>The last line of history or an empty string.</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.AI.Planner.ConversationHistory.GetLastSay(Microsoft.Teams.AI.State.ITurnState{Microsoft.Teams.AI.State.StateBase,Microsoft.Teams.AI.State.StateBase,Microsoft.Teams.AI.State.TempState})">
            <summary>
            Searches the history to find the last SAY response from the assistant.
            </summary>
            <param name="turnState">Applications turn state.</param>
            <returns>Last thing said by the assistant. Defaults to an empty string.</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.AI.Planner.ConversationHistory.RemoveLastLine(Microsoft.Teams.AI.State.ITurnState{Microsoft.Teams.AI.State.StateBase,Microsoft.Teams.AI.State.StateBase,Microsoft.Teams.AI.State.TempState})">
            <summary>
            Removes the last line from the conversation history.
            </summary>
            <param name="turnState">Applications turn state.</param>
            <returns>The removed line or null.</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.AI.Planner.ConversationHistory.ReplaceLastLine(Microsoft.Teams.AI.State.ITurnState{Microsoft.Teams.AI.State.StateBase,Microsoft.Teams.AI.State.StateBase,Microsoft.Teams.AI.State.TempState},System.String)">
            <summary>
            Replaces the last line of history with a new line.
            </summary>
            <param name="turnState">Applications turn state.</param>
            <param name="line">New line of history.</param>
        </member>
        <member name="M:Microsoft.Teams.AI.AI.Planner.ConversationHistory.ReplaceLastSay(Microsoft.Teams.AI.State.ITurnState{Microsoft.Teams.AI.State.StateBase,Microsoft.Teams.AI.State.StateBase,Microsoft.Teams.AI.State.TempState},System.String,System.String)">
            <summary>
            Replaces the last line's SAY with a new response.
            </summary>
            <param name="turnState">Applications turn state.</param>
            <param name="newResponse">New response from the assistant.</param>
            <param name="assistantPrefix">Prefix for when a new line needs to be inserted. Defaults to 'Assistant:'.</param>
        </member>
        <member name="M:Microsoft.Teams.AI.AI.Planner.ConversationHistory.ToString(Microsoft.Teams.AI.State.ITurnState{Microsoft.Teams.AI.State.StateBase,Microsoft.Teams.AI.State.StateBase,Microsoft.Teams.AI.State.TempState},System.Int32,System.String)">
            <summary>
            Returns the current conversation history as a string of text.
            </summary>
            <remarks>
            The length of the returned text is gated by <paramref name="maxTokens"/> and only whole lines of
            history entries will be returned. That means that if the length of the most recent history
            entry is greater then <paramref name="maxTokens"/>, no text will be returned.
            </remarks>
            <param name="turnState">Application's turn state.</param>
            <param name="maxTokens">Optional. Maximum length of the text returned. Defaults to 1000 tokens.</param>
            <param name="lineSeparator">Optional. Separator used between lines. Defaults to '\n'.</param>
            <returns>The most recent lines of conversation history as a text string.</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.AI.Planner.ConversationHistory.ToArray(Microsoft.Teams.AI.State.ITurnState{Microsoft.Teams.AI.State.StateBase,Microsoft.Teams.AI.State.StateBase,Microsoft.Teams.AI.State.TempState},System.Int32)">
            <summary>
            Returns the current conversation history as an array of lines.
            </summary>
            <param name="turnState">The Application's turn state.</param>
            <param name="maxTokens">Optional. Maximum length of the text to include. Defaults to 1000 tokens.</param>
            <returns>The most recent lines of conversation history as an array.</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.AI.Planner.ConversationHistory.GetHistory(Microsoft.Teams.AI.State.ITurnState{Microsoft.Teams.AI.State.StateBase,Microsoft.Teams.AI.State.StateBase,Microsoft.Teams.AI.State.TempState})">
            <summary>
            Gets the conversation history from the turn state object.
            </summary>
            <param name="turnState">The application turn state</param>
            <returns>The conversation history</returns>
        </member>
        <member name="T:Microsoft.Teams.AI.AI.Planner.IPlanner`1">
            <summary>
            A planner is responsible for generating a plan that the AI system will execute.
            </summary>
        </member>
        <member name="M:Microsoft.Teams.AI.AI.Planner.IPlanner`1.CompletePromptAsync(Microsoft.Bot.Builder.ITurnContext,`0,Microsoft.Teams.AI.AI.Prompt.PromptTemplate,Microsoft.Teams.AI.AI.AIOptions{`0},System.Threading.CancellationToken)">
            <summary>
            Completes a prompt without returning a plan.
            </summary>
            <param name="turnContext">Context for the current turn of conversation</param>
            <param name="turnState">Application state for the current turn of conversation</param>
            <param name="promptTemplate">Prompt template to complete</param>
            <param name="options">Configuration options for the AI system.</param>
            <param name="cancellationToken"></param>
            <returns>The response from the prompt.</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.AI.Planner.IPlanner`1.GeneratePlanAsync(Microsoft.Bot.Builder.ITurnContext,`0,Microsoft.Teams.AI.AI.Prompt.PromptTemplate,Microsoft.Teams.AI.AI.AIOptions{`0},System.Threading.CancellationToken)">
            <summary>
            Completes a prompt and generates a plan for the AI system to execute.
            </summary>
            <param name="turnContext">Context for the current turn of conversation</param>
            <param name="turnState">Application state for the current turn of conversation</param>
            <param name="promptTemplate">Prompt template to complete</param>
            <param name="options">Configuration options for the AI system.</param>
            <param name="cancellationToken"></param>
            <returns>The plan that was generated.</returns>
        </member>
        <member name="T:Microsoft.Teams.AI.AI.Planner.IPredictedCommand">
            <summary>
            A predicted command is a command that the AI system should execute.
            </summary>
        </member>
        <member name="P:Microsoft.Teams.AI.AI.Planner.IPredictedCommand.Type">
            <summary>
            The type of command to execute.
            </summary>
        </member>
        <member name="T:Microsoft.Teams.AI.AI.Planner.OpenAIPlanner`2">
            <summary>
            A planner that uses OpenAI's textCompletion and chatCompletion API's to generate plans.
            </summary>
            <remarks>
            This planner can be configured to use different models for different prompts. The prompts model
            will determine which API is used to generate the plan.Any model that starts with 'gpt-' will
            use the chatCompletion API, otherwise the textCompletion API will be used.
            </remarks>
        </member>
        <member name="M:Microsoft.Teams.AI.AI.Planner.OpenAIPlanner`2.#ctor(`1,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Teams.AI.AI.Planner.OpenAIPlanner`2"/> class.
            </summary>
            <param name="options">The options to configure the planner.</param>
            <param name="loggerFactory">Optional. The logger factory instance.</param>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:Microsoft.Teams.AI.AI.Planner.OpenAIPlanner`2.CompletePromptAsync(Microsoft.Bot.Builder.ITurnContext,`0,Microsoft.Teams.AI.AI.Prompt.PromptTemplate,Microsoft.Teams.AI.AI.AIOptions{`0},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Teams.AI.AI.Planner.OpenAIPlanner`2.GeneratePlanAsync(Microsoft.Bot.Builder.ITurnContext,`0,Microsoft.Teams.AI.AI.Prompt.PromptTemplate,Microsoft.Teams.AI.AI.AIOptions{`0},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Teams.AI.AI.Planner.OpenAIPlanner`1">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Teams.AI.AI.Planner.OpenAIPlanner`1.#ctor(Microsoft.Teams.AI.AI.Planner.OpenAIPlannerOptions,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Creates a new <see cref="T:Microsoft.Teams.AI.AI.Planner.OpenAIPlanner`1"/> instance.
            </summary>
            <param name="options">The options to configure the planner.</param>
            <param name="loggerFactory">The logger factory instance.</param>
        </member>
        <member name="T:Microsoft.Teams.AI.AI.Planner.OpenAIPlannerOptions">
            <summary>
            Options for the OpenAI planner.
            </summary>
        </member>
        <member name="P:Microsoft.Teams.AI.AI.Planner.OpenAIPlannerOptions.ApiKey">
            <summary>
            OpenAI API key.
            </summary>
        </member>
        <member name="P:Microsoft.Teams.AI.AI.Planner.OpenAIPlannerOptions.Organization">
            <summary>
            Optional. OpenAI organization.
            </summary>
        </member>
        <member name="P:Microsoft.Teams.AI.AI.Planner.OpenAIPlannerOptions.Endpoint">
            <summary>
            Optional. OpenAI endpoint.
            </summary>
        </member>
        <member name="P:Microsoft.Teams.AI.AI.Planner.OpenAIPlannerOptions.DefaultModel">
            <summary>
            The default model to use.
            </summary>
            <remarks>
            Prompts can override this model.
            </remarks>
        </member>
        <member name="P:Microsoft.Teams.AI.AI.Planner.OpenAIPlannerOptions.OneSayPerTurn">
            <summary>
            A flag indicating if the planner should only say one thing per turn.
            </summary>
            <remarks>
            The planner will attempt to combine multiple SAY commands into a single SAY command when true.
            Defaults to false.
            </remarks>
        </member>
        <member name="P:Microsoft.Teams.AI.AI.Planner.OpenAIPlannerOptions.UseSystemMessage">
            <summary>
            Optional. A flag indicating if the planner should use the 'system' role when calling OpenAI's
            chatCompletion API.
            </summary>
            <remarks>
            The planner currently uses the 'user' role by default as this tends to generate more reliable instruction following.
            Defaults to false.
            </remarks>
        </member>
        <member name="P:Microsoft.Teams.AI.AI.Planner.OpenAIPlannerOptions.LogRequests">
            <summary>
            A flag indicating if the planner should log requests with the provided logger.
            </summary>
            <remarks>
            Both the prompt text and the completion response will be logged.
            If this is set to true, a logger must be provided to the planner.
            Defaults to false.
            </remarks>
        </member>
        <member name="M:Microsoft.Teams.AI.AI.Planner.OpenAIPlannerOptions.#ctor(System.String,System.String)">
            <summary>
            Create an instance of the OpenAIPlannerOptions class.
            </summary>
            <param name="apiKey">OpenAI API key.</param>
            <param name="defaultModel">The default model to use.</param>
        </member>
        <member name="T:Microsoft.Teams.AI.AI.Planner.Plan">
            <summary>
            A plan is a list of commands that the AI system should execute.
            </summary>
        </member>
        <member name="P:Microsoft.Teams.AI.AI.Planner.Plan.Commands">
            <summary>
            A list of predicted commands that the AI system should execute.
            </summary>
        </member>
        <member name="P:Microsoft.Teams.AI.AI.Planner.Plan.Type">
            <summary>
            Type to indicate that a plan is being returned.
            </summary>
        </member>
        <member name="M:Microsoft.Teams.AI.AI.Planner.Plan.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Teams.AI.AI.Planner.Plan"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Teams.AI.AI.Planner.Plan.#ctor(System.Collections.Generic.List{Microsoft.Teams.AI.AI.Planner.IPredictedCommand})">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Teams.AI.AI.Planner.Plan"/> class.
            </summary>
            <param name="commands">A list of model predicted commands.</param>
        </member>
        <member name="M:Microsoft.Teams.AI.AI.Planner.Plan.ToJsonString">
            <summary>
            Returns a Json string representation of the plan.
            </summary>
        </member>
        <member name="T:Microsoft.Teams.AI.AI.Planner.PredictedDoCommand">
            <summary>
            A predicted DO command is an action that the AI system should perform.
            </summary>
        </member>
        <member name="P:Microsoft.Teams.AI.AI.Planner.PredictedDoCommand.Type">
            <summary>
            Type to indicate that a DO command is being returned.
            </summary>
        </member>
        <member name="P:Microsoft.Teams.AI.AI.Planner.PredictedDoCommand.Action">
            <summary>
            The named action that the AI system should perform.
            </summary>
        </member>
        <member name="P:Microsoft.Teams.AI.AI.Planner.PredictedDoCommand.Entities">
            <summary>
            Any entities that the AI system should use to perform the action.
            </summary>
        </member>
        <member name="M:Microsoft.Teams.AI.AI.Planner.PredictedDoCommand.#ctor(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Teams.AI.AI.Planner.PredictedDoCommand"/> class.
            </summary>
            <param name="action">The action name.</param>
            <param name="entities">The entities to be passed on to action handler.</param>
        </member>
        <member name="M:Microsoft.Teams.AI.AI.Planner.PredictedDoCommand.#ctor(System.String)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Teams.AI.AI.Planner.PredictedDoCommand"/> class.
            </summary>
            <param name="action"></param>
        </member>
        <member name="T:Microsoft.Teams.AI.AI.Planner.PredictedSayCommand">
            <summary>
            A predicted SAY command is a response that the AI system should say.
            </summary>
        </member>
        <member name="P:Microsoft.Teams.AI.AI.Planner.PredictedSayCommand.Type">
            <summary>
            The type to indicate that a SAY command is being returned.
            </summary>
        </member>
        <member name="P:Microsoft.Teams.AI.AI.Planner.PredictedSayCommand.Response">
            <summary>
            The response that the AI system should say.
            </summary>
        </member>
        <member name="M:Microsoft.Teams.AI.AI.Planner.PredictedSayCommand.#ctor(System.String)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Teams.AI.AI.Planner.PredictedSayCommand"/> class.
            </summary>
            <param name="response">The response that the AI system should say.</param>
        </member>
        <member name="T:Microsoft.Teams.AI.AI.Prompt.IPromptManager`1">
            <summary>
            Interface for a prompt manager.
            </summary>
            <typeparam name="TState">The turn state class.</typeparam>
        </member>
        <member name="P:Microsoft.Teams.AI.AI.Prompt.IPromptManager`1.Variables">
            <summary>
            Register prompt variables.
            </summary>
            <remarks>
            You will be able to reference these variables in the prompt template string by using this format: `{{ $key }}`.
            </remarks>
        </member>
        <member name="M:Microsoft.Teams.AI.AI.Prompt.IPromptManager`1.AddFunction(System.String,Microsoft.Teams.AI.AI.Prompt.PromptFunction{`0},System.Boolean)">
            <summary>
            Adds a custom function <paramref name="name"/> to the prompt manager.
            </summary>
            <remarks>
            Functions can be used with a prompt template using a syntax of `{{name}}`. Functions
            arguments are not currently supported.
            </remarks>
            <param name="name">The name of the function.</param>
            <param name="promptFunction">Delegate to return on name match.</param>
            <param name="allowOverrides">Whether to allow overriding an existing function.</param>
            <returns>The prompt manager for chaining.</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.AI.Prompt.IPromptManager`1.AddPromptTemplate(System.String,Microsoft.Teams.AI.AI.Prompt.PromptTemplate)">
            <summary>
            Adds a prompt template to the prompt manager.
            </summary>
            <param name="name">Name of the prompt template.</param>
            <param name="promptTemplate">Prompt template to add.</param>
            <returns>The prompt manager for chaining.</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.AI.Prompt.IPromptManager`1.InvokeFunction(Microsoft.Bot.Builder.ITurnContext,`0,System.String)">
            <summary>
            Invokes a function by <paramref name="name"/>.
            </summary>
            <param name="turnContext">Current application turn context.</param>
            <param name="turnState">Current turn state.</param>
            <param name="name">Name of the function to invoke.</param>
            <returns>The result returned by the function for insertion into a prompt.</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.AI.Prompt.IPromptManager`1.LoadPromptTemplate(System.String)">
            <summary>
            Loads a named prompt template from the filesystem.
            </summary>
            <param name="name">Name of the template to load.</param>
            <returns>The loaded prompt template.</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.AI.Prompt.IPromptManager`1.RenderPromptAsync(Microsoft.Bot.Builder.ITurnContext,`0,System.String)">
            <summary>
            Renders a prompt template by name.
            </summary>
            <param name="turnContext">Current application turn context.</param>
            <param name="turnState">Current turn state.</param>
            <param name="name">Name of prompt template.</param>
            <returns>The rendered prompt template</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.AI.Prompt.IPromptManager`1.RenderPromptAsync(Microsoft.Bot.Builder.ITurnContext,`0,Microsoft.Teams.AI.AI.Prompt.PromptTemplate)">
            <summary>
            Renders a prompt template.
            </summary>
            <param name="turnContext">Current application turn context.</param>
            <param name="turnState">Current turn state.</param>
            <param name="promptTemplate">Prompt template to render.</param>
            <returns>The rendered prompt template</returns>
        </member>
        <member name="T:Microsoft.Teams.AI.AI.Prompt.PromptManager`1">
            <summary>
            The prompt manager.
            </summary>
            <typeparam name="TState">The turn state class.</typeparam>
        </member>
        <member name="M:Microsoft.Teams.AI.AI.Prompt.PromptManager`1.#ctor(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Teams.AI.AI.Prompt.PromptManager`1"/> class.
            </summary>
            <param name="promptsFolder">The prompt folder. This should be the absolute path, for example, "C:\prompts".</param>
            <param name="promptVariables">Mapping to resolve prompt template variables.</param>
        </member>
        <member name="P:Microsoft.Teams.AI.AI.Prompt.PromptManager`1.Variables">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Teams.AI.AI.Prompt.PromptManager`1.AddFunction(System.String,Microsoft.Teams.AI.AI.Prompt.PromptFunction{`0},System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Teams.AI.AI.Prompt.PromptManager`1.AddPromptTemplate(System.String,Microsoft.Teams.AI.AI.Prompt.PromptTemplate)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Teams.AI.AI.Prompt.PromptManager`1.InvokeFunction(Microsoft.Bot.Builder.ITurnContext,`0,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Teams.AI.AI.Prompt.PromptManager`1.LoadPromptTemplate(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Teams.AI.AI.Prompt.PromptManager`1.RenderPromptAsync(Microsoft.Bot.Builder.ITurnContext,`0,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Teams.AI.AI.Prompt.PromptManager`1.RenderPromptAsync(Microsoft.Bot.Builder.ITurnContext,`0,Microsoft.Teams.AI.AI.Prompt.PromptTemplate)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Teams.AI.AI.Prompt.PromptManager`1.RegisterFunctionsIntoKernel(Microsoft.SemanticKernel.IKernel,Microsoft.Bot.Builder.ITurnContext,`0)">
            <summary>
            Registers all the functions into the <seealso cref="T:Microsoft.SemanticKernel.IKernel"/> default skill collection.
            </summary>
            <param name="kernel">The semantic kernel</param>
            <param name="turnContext">The context object for this turn.</param>
            <param name="turnState">The turn state object that stores arbitrary data for this turn.</param>
        </member>
        <member name="M:Microsoft.Teams.AI.AI.Prompt.PromptManager`1.LoadStateIntoContext(Microsoft.SemanticKernel.Orchestration.SKContext,Microsoft.Bot.Builder.ITurnContext,`0)">
            <summary>
            Loads value from turn context and turn state into context variables.
            </summary>
            <param name="context">The Semantic Kernel context</param>
            <param name="turnContext">The context object for this turn.</param>
            <param name="turnState">The turn state object that stores arbitrary data for this turn.</param>
            <returns>Variables that could be injected into the prompt template</returns>
        </member>
        <member name="T:Microsoft.Teams.AI.AI.Prompt.PromptTemplate">
            <summary>
            A template for a prompt.
            </summary>
        </member>
        <member name="P:Microsoft.Teams.AI.AI.Prompt.PromptTemplate.Text">
            <summary>
            The text of the prompt.
            </summary>
        </member>
        <member name="P:Microsoft.Teams.AI.AI.Prompt.PromptTemplate.Configuration">
            <summary>
            The configuration for the prompt.
            </summary>
        </member>
        <member name="M:Microsoft.Teams.AI.AI.Prompt.PromptTemplate.#ctor(System.String,Microsoft.Teams.AI.AI.Prompt.PromptTemplateConfiguration)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Teams.AI.AI.Prompt.PromptTemplate"/> class.
            </summary>
            <param name="text">The text of the prompt.</param>
            <param name="configuration">The configuration for the prompt.</param>
        </member>
        <member name="T:Microsoft.Teams.AI.AI.Prompt.PromptTemplateConfiguration">
            <summary>
            Prompt template configuration.
            </summary>
        </member>
        <member name="T:Microsoft.Teams.AI.AI.Prompt.PromptTemplateConfiguration.CompletionConfiguration">
            <summary>
            Completion configuration parameters.
            </summary>
        </member>
        <member name="P:Microsoft.Teams.AI.AI.Prompt.PromptTemplateConfiguration.CompletionConfiguration.Temperature">
            <summary>
            Sampling temperature to use, between 0 and 2. Higher values will make the output more random.
            Lower values will make it more focused and deterministic.
            </summary>
        </member>
        <member name="P:Microsoft.Teams.AI.AI.Prompt.PromptTemplateConfiguration.CompletionConfiguration.TopP">
            <summary>
            Cut-off of top_p probability mass of tokens to consider.
            For example, 0.1 means only the tokens comprising the top 10% probability mass are considered.
            </summary>
        </member>
        <member name="P:Microsoft.Teams.AI.AI.Prompt.PromptTemplateConfiguration.CompletionConfiguration.PresencePenalty">
            <summary>
            Lowers the probability of a word appearing if it already appeared in the predicted text.
            Unlike the frequency penalty, the presence penalty does not depend on the frequency at which words
            appear in past predictions.
            </summary>
        </member>
        <member name="P:Microsoft.Teams.AI.AI.Prompt.PromptTemplateConfiguration.CompletionConfiguration.FrequencyPenalty">
            <summary>
            Controls the model’s tendency to repeat predictions. The frequency penalty reduces the probability
            of words that have already been generated. The penalty depends on how many times a word has already
            occurred in the prediction.
            </summary>
        </member>
        <member name="P:Microsoft.Teams.AI.AI.Prompt.PromptTemplateConfiguration.CompletionConfiguration.MaxTokens">
            <summary>
            Maximum number of tokens that can be generated.
            </summary>
        </member>
        <member name="P:Microsoft.Teams.AI.AI.Prompt.PromptTemplateConfiguration.CompletionConfiguration.StopSequences">
            <summary>
            Stop sequences are optional sequences that tells the backend when to stop generating tokens.
            </summary>
        </member>
        <member name="T:Microsoft.Teams.AI.AI.Prompt.PromptTemplateConfiguration.InputParameterValues">
            <summary>
            Input parameter for semantic functions.
            </summary>
        </member>
        <member name="P:Microsoft.Teams.AI.AI.Prompt.PromptTemplateConfiguration.InputParameterValues.Name">
            <summary>
            Name of the parameter to pass to the function.
            e.g. when using "{{$input}}" the name is "input", when using "{{$style}}" the name is "style", etc.
            </summary>
        </member>
        <member name="P:Microsoft.Teams.AI.AI.Prompt.PromptTemplateConfiguration.InputParameterValues.Description">
            <summary>
            Parameter description for UI apps and planner. Localization is not supported here.
            </summary>
        </member>
        <member name="P:Microsoft.Teams.AI.AI.Prompt.PromptTemplateConfiguration.InputParameterValues.DefaultValue">
            <summary>
            Default value when nothing is provided.
            </summary>
        </member>
        <member name="T:Microsoft.Teams.AI.AI.Prompt.PromptTemplateConfiguration.InputConfig">
            <summary>
            Input configuration (list of all input parameters for a semantic function).
            </summary>
        </member>
        <member name="P:Microsoft.Teams.AI.AI.Prompt.PromptTemplateConfiguration.InputConfig.Parameters">
            <summary>
            List of all input parameters for a semantic function.
            </summary>
        </member>
        <member name="P:Microsoft.Teams.AI.AI.Prompt.PromptTemplateConfiguration.Schema">
            <summary>
            Schema - Not currently used.
            </summary>
        </member>
        <member name="P:Microsoft.Teams.AI.AI.Prompt.PromptTemplateConfiguration.Type">
            <summary>
            Type, such as "completion", "embeddings", etc.
            </summary>
            <remarks>TODO: use enum</remarks>
        </member>
        <member name="P:Microsoft.Teams.AI.AI.Prompt.PromptTemplateConfiguration.Description">
            <summary>
            Description
            </summary>
        </member>
        <member name="P:Microsoft.Teams.AI.AI.Prompt.PromptTemplateConfiguration.Completion">
            <summary>
            Completion configuration parameters.
            </summary>
        </member>
        <member name="P:Microsoft.Teams.AI.AI.Prompt.PromptTemplateConfiguration.DefaultBackends">
            <summary>
            Default backends to use.
            </summary>
        </member>
        <member name="P:Microsoft.Teams.AI.AI.Prompt.PromptTemplateConfiguration.Input">
            <summary>
            Input configuration (that is, list of all input parameters).
            </summary>
        </member>
        <member name="M:Microsoft.Teams.AI.AI.Prompt.PromptTemplateConfiguration.GetPromptTemplateConfig">
            <summary>
            Creates a semantic kernel prompt configuration
            </summary>
            <returns>Semantic Kernel's prompt template configuration</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.AI.Prompt.PromptTemplateConfiguration.FromJson(System.String)">
            <summary>
            Creates a prompt template configuration from JSON.
            </summary>
            <param name="json">JSON of the prompt template configuration.</param>
            <returns>Prompt template configuration.</returns>
        </member>
        <member name="T:Microsoft.Teams.AI.AI.Prompt.PromptFunction`1">
            <summary>
            The prompt function delegate.
            </summary>
            <typeparam name="TState">The turn state class.</typeparam>
            <param name="turnContext">The turn context.</param>
            <param name="turnState">The turn state.</param>
            <returns>A string that is injected in the prompt template.</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.AI.ResponseParser.ParseJSON(System.String)">
            <summary>
            Extract all the valid JSON strings within the input text and returns a list of objects.
            </summary>
            <param name="text">text that contains valid JSON object substrings</param>
            <returns>An ordered list of JSON strings</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.AI.ResponseParser.ParseAdaptiveCard(System.String)">
            <summary>
            Extracts the first Adaptive Card JSON from the given string.
            </summary>
            <param name="text">text that contains valid JSON object substrings</param>
            <returns>Returns the first adaptive card in the string if it exists. Otherwise returns null</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.AI.ResponseParser.ParseResponse(System.String)">
            <summary>
            Parses a response and returns a plan.
            
            If a plan object can be detected in the response it will be returned. Otherwise a plan with a single SAY command
            containing the response will be returned.
            </summary>
            <param name="text">Text to parse</param>
            <returns>The parsed plan</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.AI.ResponseParser.TokenizeText(System.String)">
            <summary>
            Simple text tokenizer. Breaking characters are added to list as separate tokens.
            </summary>
            <param name="text">Any input string</param>
            <returns>A list of tokens</returns>
        </member>
        <member name="T:Microsoft.Teams.AI.AdaptiveCardInvokeResponseFactory">
            <summary>
            Contains utility methods for creating various types of <see cref="T:Microsoft.Bot.Schema.AdaptiveCardInvokeResponse"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Teams.AI.AdaptiveCardInvokeResponseFactory.AdaptiveCard(AdaptiveCards.AdaptiveCard)">
            <summary>
            Returns response with type "application/vnd.microsoft.card.adaptive".
            </summary>
            <param name="adaptiveCard">An Adaptive Card.</param>
            <returns>The response that includes an Adaptive Card that the client should display.</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.AdaptiveCardInvokeResponseFactory.Message(System.String)">
            <summary>
            Returns response with type "application/vnd.microsoft.activity.message".
            </summary>
            <param name="message">A message.</param>
            <returns>The response that includes a message that the client should display.</returns>
        </member>
        <member name="T:Microsoft.Teams.AI.AdaptiveCards`2">
            <summary>
            AdaptiveCards class to enable fluent style registration of handlers related to Adaptive Cards.
            </summary>
            <typeparam name="TState">The type of the turn state object used by the application.</typeparam>
            <typeparam name="TTurnStateManager">The type of the turn state manager object used by the application.</typeparam>
        </member>
        <member name="M:Microsoft.Teams.AI.AdaptiveCards`2.#ctor(Microsoft.Teams.AI.Application{`0,`1})">
            <summary>
            Creates a new instance of the AdaptiveCards class.
            </summary>
            <param name="app"></param> The top level application class to register handlers with.
        </member>
        <member name="M:Microsoft.Teams.AI.AdaptiveCards`2.OnActionExecute(System.String,Microsoft.Teams.AI.ActionExecuteHandler{`0})">
            <summary>
            Adds a route to the application for handling Adaptive Card Action.Execute events.
            </summary>
            <param name="verb">The named action to be handled.</param>
            <param name="handler">Function to call when the action is triggered.</param>
            <returns>The application instance for chaining purposes.</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.AdaptiveCards`2.OnActionExecute(System.Text.RegularExpressions.Regex,Microsoft.Teams.AI.ActionExecuteHandler{`0})">
            <summary>
            Adds a route to the application for handling Adaptive Card Action.Execute events.
            </summary>
            <param name="verbPattern">Regular expression to match against the named action to be handled.</param>
            <param name="handler">Function to call when the action is triggered.</param>
            <returns>The application instance for chaining purposes.</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.AdaptiveCards`2.OnActionExecute(Microsoft.Teams.AI.RouteSelector,Microsoft.Teams.AI.ActionExecuteHandler{`0})">
            <summary>
            Adds a route to the application for handling Adaptive Card Action.Execute events.
            </summary>
            <param name="routeSelector">Function that's used to select a route. The function returning true triggers the route.</param>
            <param name="handler">Function to call when the route is triggered.</param>
            <returns>The application instance for chaining purposes.</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.AdaptiveCards`2.OnActionExecute(Microsoft.Teams.AI.MultipleRouteSelector,Microsoft.Teams.AI.ActionExecuteHandler{`0})">
            <summary>
            Adds a route to the application for handling Adaptive Card Action.Execute events.
            </summary>
            <param name="routeSelectors">Combination of String, Regex, and RouteSelector selectors.</param>
            <param name="handler">Function to call when the route is triggered.</param>
            <returns>The application instance for chaining purposes.</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.AdaptiveCards`2.OnActionSubmit(System.String,Microsoft.Teams.AI.ActionSubmitHandler{`0})">
             <summary>
             Adds a route to the application for handling Adaptive Card Action.Submit events.
             </summary>
             <remarks>
             The route will be added for the specified verb(s) and will be filtered using the
             `actionSubmitFilter` option. The default filter is to use the `verb` field.
             
             For outgoing AdaptiveCards you will need to include the verb's name in the cards Action.Submit.
             For example:
            
             ```JSON
             {
               "type": "Action.Submit",
               "title": "OK",
               "data": {
                 "verb": "ok"
               }
             }
             ```
             </remarks>
             <param name="verb">The named action to be handled.</param>
             <param name="handler">Function to call when the action is triggered.</param>
             <returns>The application instance for chaining purposes.</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.AdaptiveCards`2.OnActionSubmit(System.Text.RegularExpressions.Regex,Microsoft.Teams.AI.ActionSubmitHandler{`0})">
             <summary>
             Adds a route to the application for handling Adaptive Card Action.Submit events.
             </summary>
             <remarks>
             The route will be added for the specified verb(s) and will be filtered using the
             `actionSubmitFilter` option. The default filter is to use the `verb` field.
             
             For outgoing AdaptiveCards you will need to include the verb's name in the cards Action.Submit.
             For example:
            
             ```JSON
             {
               "type": "Action.Submit",
               "title": "OK",
               "data": {
                 "verb": "ok"
               }
             }
             ```
             </remarks>
             <param name="verbPattern">Regular expression to match against the named action to be handled.</param>
             <param name="handler">Function to call when the route is triggered.</param>
             <returns>The application instance for chaining purposes.</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.AdaptiveCards`2.OnActionSubmit(Microsoft.Teams.AI.RouteSelector,Microsoft.Teams.AI.ActionSubmitHandler{`0})">
             <summary>
             Adds a route to the application for handling Adaptive Card Action.Submit events.
             </summary>
             <remarks>
             The route will be added for the specified verb(s) and will be filtered using the
             `actionSubmitFilter` option. The default filter is to use the `verb` field.
             
             For outgoing AdaptiveCards you will need to include the verb's name in the cards Action.Submit.
             For example:
            
             ```JSON
             {
               "type": "Action.Submit",
               "title": "OK",
               "data": {
                 "verb": "ok"
               }
             }
             ```
             </remarks>
             <param name="routeSelector">Function that's used to select a route. The function returning true triggers the route.</param>
             <param name="handler">Function to call when the route is triggered.</param>
             <returns>The application instance for chaining purposes.</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.AdaptiveCards`2.OnActionSubmit(Microsoft.Teams.AI.MultipleRouteSelector,Microsoft.Teams.AI.ActionSubmitHandler{`0})">
             <summary>
             Adds a route to the application for handling Adaptive Card Action.Submit events.
             </summary>
             <remarks>
             The route will be added for the specified verb(s) and will be filtered using the
             `actionSubmitFilter` option. The default filter is to use the `verb` field.
             
             For outgoing AdaptiveCards you will need to include the verb's name in the cards Action.Submit.
             For example:
            
             ```JSON
             {
               "type": "Action.Submit",
               "title": "OK",
               "data": {
                 "verb": "ok"
               }
             }
             ```
             </remarks>
             <param name="routeSelectors">Combination of String, Regex, and RouteSelector selectors.</param>
             <param name="handler">Function to call when the route is triggered.</param>
             <returns>The application instance for chaining purposes.</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.AdaptiveCards`2.OnSearch(System.String,Microsoft.Teams.AI.SearchHandler{`0})">
            <summary>
            Adds a route to the application for handling Adaptive Card dynamic search events.
            </summary>
            <param name="dataset">The dataset to be searched.</param>
            <param name="handler">Function to call when the search is triggered.</param>
            <returns>The application instance for chaining purposes.</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.AdaptiveCards`2.OnSearch(System.Text.RegularExpressions.Regex,Microsoft.Teams.AI.SearchHandler{`0})">
            <summary>
            Adds a route to the application for handling Adaptive Card dynamic search events.
            </summary>
            <param name="datasetPattern">Regular expression to match against the dataset to be searched.</param>
            <param name="handler">Function to call when the search is triggered.</param>
            <returns>The application instance for chaining purposes.</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.AdaptiveCards`2.OnSearch(Microsoft.Teams.AI.RouteSelector,Microsoft.Teams.AI.SearchHandler{`0})">
            <summary>
            Adds a route to the application for handling Adaptive Card dynamic search events.
            </summary>
            <param name="routeSelector">Function that's used to select a route. The function returning true triggers the route.</param>
            <param name="handler">Function to call when the route is triggered.</param>
            <returns>The application instance for chaining purposes.</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.AdaptiveCards`2.OnSearch(Microsoft.Teams.AI.MultipleRouteSelector,Microsoft.Teams.AI.SearchHandler{`0})">
            <summary>
            Adds a route to the application for handling Adaptive Card dynamic search events.
            </summary>
            <param name="routeSelectors">Combination of String, Regex, and RouteSelector selectors.</param>
            <param name="handler">Function to call when the route is triggered.</param>
            <returns>The application instance for chaining purposes.</returns>
        </member>
        <member name="T:Microsoft.Teams.AI.AdaptiveCardsSearchParams">
            <summary>
            Parameters passed to AdaptiveCards.OnSearch() handler.
            </summary>
        </member>
        <member name="P:Microsoft.Teams.AI.AdaptiveCardsSearchParams.QueryText">
            <summary>
            The query text.
            </summary>
        </member>
        <member name="P:Microsoft.Teams.AI.AdaptiveCardsSearchParams.Dataset">
            <summary>
            The dataset to search.
            </summary>
        </member>
        <member name="M:Microsoft.Teams.AI.AdaptiveCardsSearchParams.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Teams.AI.AdaptiveCardsSearchParams"/> class.
            </summary>
            <param name="queryText">The query text.</param>
            <param name="dataset">The dataset to search.</param>
        </member>
        <member name="T:Microsoft.Teams.AI.AdaptiveCardsSearchResult">
            <summary>
            Individual result returned from AdaptiveCards.OnSearch() handler.
            </summary>
        </member>
        <member name="P:Microsoft.Teams.AI.AdaptiveCardsSearchResult.Title">
            <summary>
            The title of the result.
            </summary>
        </member>
        <member name="P:Microsoft.Teams.AI.AdaptiveCardsSearchResult.Value">
            <summary>
            The subtitle of the result.
            </summary>
        </member>
        <member name="M:Microsoft.Teams.AI.AdaptiveCardsSearchResult.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Teams.AI.AdaptiveCardsSearchResult"/> class.
            </summary>
            <param name="title">The title of the result.</param>
            <param name="value">The subtitle of the result.</param>
        </member>
        <member name="T:Microsoft.Teams.AI.ActionExecuteHandler`1">
            <summary>
            Function for handling Adaptive Card Action.Execute events.
            </summary>
            <typeparam name="TState">Type of the turn state. This allows for strongly typed access to the turn state.</typeparam>
            <param name="turnContext">A strongly-typed context object for this turn.</param>
            <param name="turnState">The turn state object that stores arbitrary data for this turn.</param>
            <param name="data">The data associated with the action.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
            <returns>An instance of AdaptiveCardInvokeResponse, which can be created using <see cref="T:Microsoft.Teams.AI.AdaptiveCardInvokeResponseFactory"/>.</returns>
        </member>
        <member name="T:Microsoft.Teams.AI.ActionSubmitHandler`1">
            <summary>
            Function for handling Adaptive Card Action.Submit events.
            </summary>
            <typeparam name="TState">Type of the turn state. This allows for strongly typed access to the turn state.</typeparam>
            <param name="turnContext">A strongly-typed context object for this turn.</param>
            <param name="turnState">The turn state object that stores arbitrary data for this turn.</param>
            <param name="data">The data associated with the action.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
            <returns>A task that represents the work queued to execute.</returns>
        </member>
        <member name="T:Microsoft.Teams.AI.SearchHandler`1">
            <summary>
            Function for handling Adaptive Card dynamic search events.
            </summary>
            <typeparam name="TState">Type of the turn state. This allows for strongly typed access to the turn state.</typeparam>
            <param name="turnContext">A strongly-typed context object for this turn.</param>
            <param name="turnState">The turn state object that stores arbitrary data for this turn.</param>
            <param name="query">The query arguments.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
            <returns>A list of AdaptiveCardsSearchResult.</returns>
        </member>
        <member name="T:Microsoft.Teams.AI.AdaptiveCardsOptions">
            <summary>
            Options for AdaptiveCards class.
            </summary>
        </member>
        <member name="P:Microsoft.Teams.AI.AdaptiveCardsOptions.ActionSubmitFilter">
            <summary>
            Data field used to identify the Action.Submit handler to trigger.
            </summary>
            <remarks>
            When an Action.Submit is triggered, the field name specified here will be used to determine
            the handler to route the request to.
            Defaults to a value of "verb".
            </remarks>
        </member>
        <member name="T:Microsoft.Teams.AI.Application`2">
             <summary>
             Application class for routing and processing incoming requests.
             </summary>
             <remarks>
             The Application object replaces the traditional ActivityHandler that a bot would use. It supports
             a simpler fluent style of authoring bots versus the inheritance based approach used by the
             ActivityHandler class.
            
             Additionally, it has built-in support for calling into the SDK's AI system and can be used to create
             bots that leverage Large Language Models (LLM) and other AI capabilities.
             </remarks>
             <typeparam name="TState">Type of the turn state. This allows for strongly typed access to the turn state.</typeparam>
             <typeparam name="TTurnStateManager">Type of the turn state manager.</typeparam>
        </member>
        <member name="M:Microsoft.Teams.AI.Application`2.#ctor(Microsoft.Teams.AI.ApplicationOptions{`0,`1})">
            <summary>
            Creates a new Application instance.
            </summary>
            <param name="options">Optional. Options used to configure the application.</param>
        </member>
        <member name="P:Microsoft.Teams.AI.Application`2.AdaptiveCards">
            <summary>
            Fluent interface for accessing Adaptive Card specific features.
            </summary>
        </member>
        <member name="P:Microsoft.Teams.AI.Application`2.Meetings">
            <summary>
            Fluent interface for accessing Meetings' specific features.
            </summary>
        </member>
        <member name="P:Microsoft.Teams.AI.Application`2.MessageExtensions">
            <summary>
            Fluent interface for accessing Message Extensions' specific features.
            </summary>
        </member>
        <member name="P:Microsoft.Teams.AI.Application`2.TaskModules">
            <summary>
            Fluent interface for accessing Task Modules' specific features.
            </summary>
        </member>
        <member name="P:Microsoft.Teams.AI.Application`2.AI">
            <summary>
            Fluent interface for accessing AI specific features.
            </summary>
            <remarks>
            This property is only available if the Application was configured with 'ai' options. An
            exception will be thrown if you attempt to access it otherwise.
            </remarks>
        </member>
        <member name="P:Microsoft.Teams.AI.Application`2.Options">
            <summary>
            The application's configured options.
            </summary>
        </member>
        <member name="M:Microsoft.Teams.AI.Application`2.AddRoute(Microsoft.Teams.AI.RouteSelector,Microsoft.Teams.AI.RouteHandler{`0},System.Boolean)">
             <summary>
             Adds a new route to the application.
             
             Developers won't typically need to call this method directly as it's used internally by all
             of the fluent interfaces to register routes for their specific activity types.
             
             Routes will be matched in the order they're added to the application. The first selector to
             return `true` when an activity is received will have its handler called.
            
             Invoke-based activities receive special treatment and are matched separately as they typically
             have shorter execution timeouts.
             </summary>
             <param name="selector">Function that's used to select a route. The function returning true triggers the route.</param>
             <param name="handler">Function to call when the route is triggered.</param>
             <param name="isInvokeRoute">Boolean indicating if the RouteSelector is for an activity that uses "invoke" which require special handling. Defaults to `false`.</param>
             <returns>The application instance for chaining purposes.</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.Application`2.OnActivity(System.String,Microsoft.Teams.AI.RouteHandler{`0})">
            <summary>
            Handles incoming activities of a given type.
            </summary>
            <param name="type">Name of the activity type to match.</param>
            <param name="handler">Function to call when the route is triggered.</param>
            <returns>The application instance for chaining purposes.</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.Application`2.OnActivity(System.Text.RegularExpressions.Regex,Microsoft.Teams.AI.RouteHandler{`0})">
            <summary>
            Handles incoming activities of a given type.
            </summary>
            <param name="typePattern">Regular expression to match against the incoming activity type.</param>
            <param name="handler">Function to call when the route is triggered.</param>
            <returns>The application instance for chaining purposes.</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.Application`2.OnActivity(Microsoft.Teams.AI.RouteSelector,Microsoft.Teams.AI.RouteHandler{`0})">
            <summary>
            Handles incoming activities of a given type.
            </summary>
            <param name="routeSelector">Function that's used to select a route. The function returning true triggers the route.</param>
            <param name="handler">Function to call when the route is triggered.</param>
            <returns>The application instance for chaining purposes.</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.Application`2.OnActivity(Microsoft.Teams.AI.MultipleRouteSelector,Microsoft.Teams.AI.RouteHandler{`0})">
            <summary>
            Handles incoming activities of a given type.
            </summary>
            <param name="routeSelectors">Combination of String, Regex, and RouteSelector selectors.</param>
            <param name="handler">Function to call when the route is triggered.</param>
            <returns>The application instance for chaining purposes.</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.Application`2.OnConversationUpdate(System.String,Microsoft.Teams.AI.RouteHandler{`0})">
            <summary>
            Handles conversation update events.
            </summary>
            <param name="conversationUpdateEvent">Name of the conversation update event to handle, can use <see cref="T:Microsoft.Teams.AI.ConversationUpdateEvents"/>.</param>
            <param name="handler">Function to call when the route is triggered.</param>
            <returns>The application instance for chaining purposes.</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.Application`2.OnConversationUpdate(System.String[],Microsoft.Teams.AI.RouteHandler{`0})">
            <summary>
            Handles conversation update events.
            </summary>
            <param name="conversationUpdateEvents">Name of the conversation update events to handle, can use <see cref="T:Microsoft.Teams.AI.ConversationUpdateEvents"/> as array item.</param>
            <param name="handler">Function to call when the route is triggered.</param>
            <returns>The application instance for chaining purposes.</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.Application`2.OnMessage(System.String,Microsoft.Teams.AI.RouteHandler{`0})">
            <summary>
            Handles incoming messages with a given keyword.
            <br/>
            This method provides a simple way to have a bot respond anytime a user sends your bot a
            message with a specific word or phrase.
            <br/>
            For example, you can easily clear the current conversation anytime a user sends "/reset":
            <br/>
            <code>application.OnMessage("/reset", (context, state, _) => ...);</code>
            </summary>
            <param name="text">Substring of the incoming message text.</param>
            <param name="handler">Function to call when the route is triggered.</param>
            <returns>The application instance for chaining purposes.</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.Application`2.OnMessage(System.Text.RegularExpressions.Regex,Microsoft.Teams.AI.RouteHandler{`0})">
            <summary>
            Handles incoming messages with a given keyword.
            <br/>
            This method provides a simple way to have a bot respond anytime a user sends your bot a
            message with a specific word or phrase.
            <br/>
            For example, you can easily clear the current conversation anytime a user sends "/reset":
            <br/>
            <code>application.OnMessage(new Regex("reset"), (context, state, _) => ...);</code>
            </summary>
            <param name="textPattern">Regular expression to match against the text of an incoming message.</param>
            <param name="handler">Function to call when the route is triggered.</param>
            <returns>The application instance for chaining purposes.</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.Application`2.OnMessage(Microsoft.Teams.AI.RouteSelector,Microsoft.Teams.AI.RouteHandler{`0})">
            <summary>
            Handles incoming messages with a given keyword.
            <br/>
            This method provides a simple way to have a bot respond anytime a user sends your bot a
            message with a specific word or phrase.
            </summary>
            <param name="routeSelector">Function that's used to select a route. The function returning true triggers the route.</param>
            <param name="handler">Function to call when the route is triggered.</param>
            <returns>The application instance for chaining purposes.</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.Application`2.OnMessage(Microsoft.Teams.AI.MultipleRouteSelector,Microsoft.Teams.AI.RouteHandler{`0})">
            <summary>
            Handles incoming messages with a given keyword.
            <br/>
            This method provides a simple way to have a bot respond anytime a user sends your bot a
            message with a specific word or phrase.
            </summary>
            <param name="routeSelectors">Combination of String, Regex, and RouteSelector selectors.</param>
            <param name="handler">Function to call when the route is triggered.</param>
            <returns>The application instance for chaining purposes.</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.Application`2.OnMessageEdit(Microsoft.Teams.AI.RouteHandler{`0})">
            <summary>
            Handles message edit events.
            </summary>
            <param name="handler">Function to call when the event is triggered.</param>
            <returns>The application instance for chaining purposes.</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.Application`2.OnMessageUndelete(Microsoft.Teams.AI.RouteHandler{`0})">
            <summary>
            Handles message undo soft delete events.
            </summary>
            <param name="handler">Function to call when the event is triggered.</param>
            <returns>The application instance for chaining purposes.</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.Application`2.OnMessageDelete(Microsoft.Teams.AI.RouteHandler{`0})">
            <summary>
            Handles message soft delete events.
            </summary>
            <param name="handler">Function to call when the event is triggered.</param>
            <returns>The application instance for chaining purposes.</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.Application`2.OnMessageReactionsAdded(Microsoft.Teams.AI.RouteHandler{`0})">
            <summary>
            Handles message reactions added events.
            </summary>
            <param name="handler">Function to call when the route is triggered.</param>
            <returns>The application instance for chaining purposes.</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.Application`2.OnMessageReactionsRemoved(Microsoft.Teams.AI.RouteHandler{`0})">
            <summary>
            Handles message reactions removed events.
            </summary>
            <param name="handler">Function to call when the route is triggered.</param>
            <returns>The application instance for chaining purposes.</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.Application`2.OnTeamsReadReceipt(Microsoft.Teams.AI.ReadReceiptHandler{`0})">
            <summary>
            Handles read receipt events for messages sent by the bot in personal scope.
            </summary>
            <param name="handler">Function to call when the route is triggered.</param>
            <returns>The application instance for chaining purposes.</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.Application`2.OnConfigFetch(Microsoft.Teams.AI.ConfigHandler{`0})">
            <summary>
            Handles config fetch events for Microsoft Teams.
            </summary>
            <param name="handler">Function to call when the event is triggered.</param>
            <returns>The application instance for chaining purposes.</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.Application`2.OnConfigSubmit(Microsoft.Teams.AI.ConfigHandler{`0})">
            <summary>
            Handles config submit events for Microsoft Teams.
            </summary>
            <param name="handler">Function to call when the event is triggered.</param>
            <returns>The application instance for chaining purposes.</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.Application`2.OnFileConsentAccept(Microsoft.Teams.AI.FileConsentHandler{`0})">
            <summary>
            Handles when a file consent card is accepted by the user.
            </summary>
            <param name="handler">Function to call when the route is triggered.</param>
            <returns>The application instance for chaining purposes.</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.Application`2.OnFileConsentDecline(Microsoft.Teams.AI.FileConsentHandler{`0})">
            <summary>
            Handles when a file consent card is declined by the user.
            </summary>
            <param name="handler">Function to call when the route is triggered.</param>
            <returns>The application instance for chaining purposes.</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.Application`2.OnO365ConnectorCardAction(Microsoft.Teams.AI.O365ConnectorCardActionHandler{`0})">
            <summary>
            Handles O365 Connector Card Action activities.
            </summary>
            <param name="handler">Function to call when the route is triggered.</param>
            <returns>The application instance for chaining purposes.</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.Application`2.OnBeforeTurn(Microsoft.Teams.AI.TurnEventHandler{`0})">
            <summary>
            Add a handler that will execute before the turn's activity handler logic is processed.
            <br/>
            Handler returns true to continue execution of the current turn. Handler returning false
            prevents the turn from running, but the bots state is still saved, which lets you
            track the reason why the turn was not processed. It also means you can use this as
            a way to call into the dialog system. For example, you could use the OAuthPrompt to sign the
            user in before allowing the AI system to run.
            </summary>
            <param name="handler">Function to call before turn execution.</param>
            <returns>The application instance for chaining purposes.</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.Application`2.OnAfterTurn(Microsoft.Teams.AI.TurnEventHandler{`0})">
            <summary>
            Add a handler that will execute after the turn's activity handler logic is processed.
            <br/>
            Handler returns true to finish execution of the current turn. Handler returning false
            prevents the bots state from being saved.
            </summary>
            <param name="handler">Function to call after turn execution.</param>
            <returns>The application instance for chaining purposes.</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.Application`2.OnTurnAsync(Microsoft.Bot.Builder.ITurnContext,System.Threading.CancellationToken)">
            <summary>
            Called by the adapter (for example, a <see cref="T:Microsoft.Bot.Builder.Integration.AspNet.Core.CloudAdapter"/>)
            at runtime in order to process an inbound <see cref="T:Microsoft.Bot.Schema.Activity"/>.
            </summary>
            <param name="turnContext">The context object for this turn.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
            <returns>A task that represents the work queued to execute.</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.Application`2.StartTypingTimer(Microsoft.Bot.Builder.ITurnContext)">
            <summary>
            Manually start a timer to periodically send "typing" activities.
            </summary>
            <remarks>
            The timer waits 1000ms to send its initial "typing" activity and then send an additional
            "typing" activity every 1000ms.The timer will automatically end once an outgoing activity
            has been sent. If the timer is already running or the current activity is not a "message"
            the call is ignored.
            </remarks>
            <param name="turnContext">The turn context.</param>
        </member>
        <member name="M:Microsoft.Teams.AI.Application`2.StopTypingTimer">
            <summary>
            Manually stop the typing timer.
            </summary>
            <remarks>
            If the timer isn't running nothing happens.
            </remarks>
        </member>
        <member name="M:Microsoft.Teams.AI.Application`2._OnTurnAsync(Microsoft.Bot.Builder.ITurnContext,System.Threading.CancellationToken)">
            <summary>
            Internal method to wrap the logic of handling a bot turn.
            </summary>
        </member>
        <member name="M:Microsoft.Teams.AI.Application`2._StartLongRunningCall(Microsoft.Bot.Builder.ITurnContext,System.Func{Microsoft.Bot.Builder.ITurnContext,System.Threading.CancellationToken,System.Threading.Tasks.Task},System.Threading.CancellationToken)">
            <summary>
            Convert original handler to proactive conversation.
            </summary>
            <param name="turnContext">A strongly-typed context object for this turn.</param>
            <param name="handler">The method to call to handle the bot turn.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
            <returns>A task that represents the work queued to execute.</returns>
        </member>
        <member name="T:Microsoft.Teams.AI.ApplicationBuilder`2">
            <summary>
            A builder class for simplifying the creation of an Application instance.
            </summary>
            <typeparam name="TState">Optional. Type of the turn state. This allows for strongly typed access to the turn state.</typeparam>
            <typeparam name="TTurnStateManager">Type of the turn state manager.</typeparam>
        </member>
        <member name="P:Microsoft.Teams.AI.ApplicationBuilder`2.Options">
            <summary>
            The application's configured options.
            </summary>
        </member>
        <member name="M:Microsoft.Teams.AI.ApplicationBuilder`2.WithLongRunningMessages(Microsoft.Bot.Builder.BotAdapter,System.String)">
            <summary>
            Configures the application to use long running messages.
            Default state for longRunningMessages is false
            </summary>
            <param name="adapter">The adapter to use for routing incoming requests.</param>
            <param name="botAppId">The Microsoft App ID for the bot.</param>
            <returns>The ApplicationBuilder instance.</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.ApplicationBuilder`2.WithStorage(Microsoft.Bot.Builder.IStorage)">
            <summary>
            Configures the storage system to use for storing the bot's state.
            </summary>
            <param name="storage">The storage system to use.</param>
            <returns>The ApplicationBuilder instance.</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.ApplicationBuilder`2.WithAIOptions(Microsoft.Teams.AI.AI.AIOptions{`0})">
            <summary>
            Configures the AI system to use for processing incoming messages.
            </summary>
            <param name="aiOptions">The options for the AI system.</param>
            <returns>The ApplicationBuilder instance.</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.ApplicationBuilder`2.WithTurnStateManager(`1)">
            <summary>
            Configures the turn state manager to use for managing the bot's turn state.
            </summary>
            <param name="turnStateManager">The turn state manager to use.</param>
            <returns>The ApplicationBuilder instance.</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.ApplicationBuilder`2.WithLoggerFactory(Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Configures the Logger factory for the application
            </summary>
            <param name="loggerFactory">The Logger factory</param>
            <returns>The ApplicationBuilder instance.</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.ApplicationBuilder`2.WithAdaptiveCardOptions(Microsoft.Teams.AI.AdaptiveCardsOptions)">
            <summary>
            Configures the processing of Adaptive Card requests.
            </summary>
            <param name="adaptiveCardOptions">The options for Adaptive Cards.</param>
            <returns>The ApplicationBuilder instance.</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.ApplicationBuilder`2.WithTaskModuleOptions(Microsoft.Teams.AI.TaskModulesOptions)">
            <summary>
            Configures the processing of Task Module requests.
            </summary>
            <param name="taskModulesOptions">The options for Task Modules.</param>
            <returns>The ApplicationBuilder instance.</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.ApplicationBuilder`2.SetRemoveRecipientMention(System.Boolean)">
            <summary>
            Configures the removing of mentions of the bot's name from incoming messages.
            Default state for removeRecipientMention is true
            </summary>
            <param name="removeRecipientMention">The boolean for removing recipient mentions.</param>
            <returns>The ApplicationBuilder instance.</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.ApplicationBuilder`2.SetStartTypingTimer(System.Boolean)">
            <summary>
            Configures the typing timer when messages are received.
            Default state for startTypingTimer is true
            </summary>
            <param name="startTypingTimer">The boolean for starting the typing timer.</param>
            <returns>The ApplicationBuilder instance.</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.ApplicationBuilder`2.Build">
            <summary>
            Builds and returns a new Application instance.
            </summary>
            <returns>The Application instance.</returns>
        </member>
        <member name="T:Microsoft.Teams.AI.ApplicationOptions`2">
            <summary>
            Options for the <see cref="T:Microsoft.Teams.AI.Application`2"/> class.
            </summary>
            <typeparam name="TState">Type of the turn state.</typeparam>
            <typeparam name="TTurnStateManager">Type of the turn state manager.</typeparam>
        </member>
        <member name="P:Microsoft.Teams.AI.ApplicationOptions`2.Adapter">
            <summary>
            Optional. Bot adapter being used.
            </summary>
            <remarks>
            If using the LongRunningMessages option or calling the ContinueConversationAsync method, this property is required.
            </remarks>
        </member>
        <member name="P:Microsoft.Teams.AI.ApplicationOptions`2.BotAppId">
            <summary>
            Optional. Application ID of the bot.
            </summary>
            <remarks>
            If using the <see cref="P:Microsoft.Teams.AI.ApplicationOptions`2.LongRunningMessages"/> option or calling the <see cref="M:Microsoft.Bot.Builder.CloudAdapterBase.ContinueConversationAsync(System.String,Microsoft.Bot.Schema.Activity,Microsoft.Bot.Builder.BotCallbackHandler,System.Threading.CancellationToken)"/> method, this property is required.
            </remarks>
        </member>
        <member name="P:Microsoft.Teams.AI.ApplicationOptions`2.Storage">
            <summary>
            Optional. Storage provider to use for the application.
            </summary>
        </member>
        <member name="P:Microsoft.Teams.AI.ApplicationOptions`2.AdaptiveCards">
            <summary>
            Optional. Options used to customize the processing of Adaptive Card requests.
            </summary>
        </member>
        <member name="P:Microsoft.Teams.AI.ApplicationOptions`2.TaskModules">
            <summary>
            Optional. Options used to customize the processing of Task Modules requests.
            </summary>
        </member>
        <member name="P:Microsoft.Teams.AI.ApplicationOptions`2.AI">
            <summary>
            Optional. AI options to use. When provided, a new instance of the AI system will be created.
            </summary>
        </member>
        <member name="P:Microsoft.Teams.AI.ApplicationOptions`2.TurnStateManager">
            <summary>
            Optional. Turn state manager to use. If omitted, an instance of TTurnStateManager will
            be created using the parameterless constructor.
            </summary>
        </member>
        <member name="P:Microsoft.Teams.AI.ApplicationOptions`2.LoggerFactory">
            <summary>
            Optional. Logger factory that will be used in this application.
            </summary>
            <remarks>
            <see cref="T:Microsoft.Teams.AI.AI.Planner.OpenAIPlanner`2"/> and <see cref="T:Microsoft.Teams.AI.AI.Planner.AzureOpenAIPlanner`1"/> prompt completion data will is logged at the <see cref="F:Microsoft.Extensions.Logging.LogLevel.Information"/> level.
            </remarks>
        </member>
        <member name="P:Microsoft.Teams.AI.ApplicationOptions`2.RemoveRecipientMention">
            <summary>
            Optional. If true, the bot will automatically remove mentions of the bot's name from incoming
            messages. Defaults to true.
            </summary>
        </member>
        <member name="P:Microsoft.Teams.AI.ApplicationOptions`2.StartTypingTimer">
            <summary>
            Optional. If true, the bot will automatically start a typing timer when messages are received.
            This allows the bot to automatically indicate that it's received the message and is processing
            the request. Defaults to true.
            </summary>
        </member>
        <member name="P:Microsoft.Teams.AI.ApplicationOptions`2.LongRunningMessages">
            <summary>
            Optional. If true, the bot supports long running messages that can take longer then the 10 - 15
            second timeout imposed by most channels. Defaults to false.
            </summary>
            <remarks>
            This works by immediately converting the incoming request to a proactive conversation. Care should
            be used for bots that operate in a shared hosting environment. The incoming request is immediately
            completed and many shared hosting environments will mark the bot's process as idle and shut it down.
            </remarks>
        </member>
        <member name="T:Microsoft.Teams.AI.ConfigHandler`1">
            <summary>
            Function for handling config events.
            </summary>
            <typeparam name="TState">Type of the turn state. This allows for strongly typed access to the turn state.</typeparam>
            <param name="turnContext">A strongly-typed context object for this turn.</param>
            <param name="turnState">The turn state object that stores arbitrary data for this turn.</param>
            <param name="configData">The config data.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
            <returns>An instance of ConfigResponseBase.</returns>
        </member>
        <member name="T:Microsoft.Teams.AI.ConversationUpdateEvents">
            <summary>
            Conversation update events.
            </summary>
        </member>
        <member name="F:Microsoft.Teams.AI.ConversationUpdateEvents.ChannelCreated">
            <summary>
            ChannelCreated event
            </summary>
        </member>
        <member name="F:Microsoft.Teams.AI.ConversationUpdateEvents.ChannelRenamed">
            <summary>
            ChannelRenamed event
            </summary>
        </member>
        <member name="F:Microsoft.Teams.AI.ConversationUpdateEvents.ChannelDeleted">
            <summary>
            ChannelDeleted event
            </summary>
        </member>
        <member name="F:Microsoft.Teams.AI.ConversationUpdateEvents.ChannelRestored">
            <summary>
            ChannelRestored event
            </summary>
        </member>
        <member name="F:Microsoft.Teams.AI.ConversationUpdateEvents.MembersAdded">
            <summary>
            MembersAdded event
            </summary>
        </member>
        <member name="F:Microsoft.Teams.AI.ConversationUpdateEvents.MembersRemoved">
            <summary>
            MembersRemoved event
            </summary>
        </member>
        <member name="F:Microsoft.Teams.AI.ConversationUpdateEvents.TeamRenamed">
            <summary>
            TeamRenamed event
            </summary>
        </member>
        <member name="F:Microsoft.Teams.AI.ConversationUpdateEvents.TeamDeleted">
            <summary>
            TeamDeleted event
            </summary>
        </member>
        <member name="F:Microsoft.Teams.AI.ConversationUpdateEvents.TeamArchived">
            <summary>
            TeamArchived event
            </summary>
        </member>
        <member name="F:Microsoft.Teams.AI.ConversationUpdateEvents.TeamUnarchived">
            <summary>
            TeamUnarchived event
            </summary>
        </member>
        <member name="F:Microsoft.Teams.AI.ConversationUpdateEvents.TeamRestored">
            <summary>
            TeamRestored event
            </summary>
        </member>
        <member name="F:Microsoft.Teams.AI.ConversationUpdateEvents.TeamHardDeleted">
            <summary>
            TeamHardDeleted event
            </summary>
        </member>
        <member name="F:Microsoft.Teams.AI.ConversationUpdateEvents.TopicName">
            <summary>
            TopicName event 
            </summary>
        </member>
        <member name="F:Microsoft.Teams.AI.ConversationUpdateEvents.HistoryDisclosed">
            <summary>
            HistoryDisclosed event
            </summary>
        </member>
        <member name="T:Microsoft.Teams.AI.FileConsentHandler`1">
            <summary>
            Function for handling file consent card activities.
            </summary>
            <typeparam name="TState">Type of the turn state. This allows for strongly typed access to the turn state.</typeparam>
            <param name="turnContext">A strongly-typed context object for this turn.</param>
            <param name="turnState">The turn state object that stores arbitrary data for this turn.</param>
            <param name="fileConsentCardResponse">The response representing the value of the invoke activity sent when the user acts on a file consent card.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
            <returns>A task that represents the work queued to execute.</returns>
        </member>
        <member name="T:Microsoft.Teams.AI.Meetings`2">
            <summary>
            Meetings class to enable fluent style registration of handlers related to Microsoft Teams Meetings.
            </summary>
            <typeparam name="TState">The type of the turn state object used by the application.</typeparam>
            <typeparam name="TTurnStateManager">The type of the turn state manager object used by the application.</typeparam>
        </member>
        <member name="M:Microsoft.Teams.AI.Meetings`2.#ctor(Microsoft.Teams.AI.Application{`0,`1})">
            <summary>
            Creates a new instance of the Meetings class.
            </summary>
            <param name="app"></param> The top level application class to register handlers with.
        </member>
        <member name="M:Microsoft.Teams.AI.Meetings`2.OnStart(Microsoft.Teams.AI.MeetingStartHandler{`0})">
            <summary>
            Handles Microsoft Teams meeting start events.
            </summary>
            <param name="handler">Function to call when a Microsoft Teams meeting start event activity is received from the connector.</param>
            <returns>The application instance for chaining purposes.</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.Meetings`2.OnEnd(Microsoft.Teams.AI.MeetingEndHandler{`0})">
            <summary>
            Handles Microsoft Teams meeting end events.
            </summary>
            <param name="handler">Function to call when a Microsoft Teams meeting end event activity is received from the connector.</param>
            <returns>The application instance for chaining purposes.</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.Meetings`2.OnParticipantsJoin(Microsoft.Teams.AI.MeetingParticipantsEventHandler{`0})">
            <summary>
            Handles Microsoft Teams meeting participants join events.
            </summary>
            <param name="handler">Function to call when a Microsoft Teams meeting participants join event activity is received from the connector.</param>
            <returns>The application instance for chaining purposes.</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.Meetings`2.OnParticipantsLeave(Microsoft.Teams.AI.MeetingParticipantsEventHandler{`0})">
            <summary>
            Handles Microsoft Teams meeting participants leave events.
            </summary>
            <param name="handler">Function to call when a Microsoft Teams meeting participants leave event activity is received from the connector.</param>
            <returns>The application instance for chaining purposes.</returns>
        </member>
        <member name="T:Microsoft.Teams.AI.MeetingStartHandler`1">
            <summary>
            Function for handling Microsoft Teams meeting start events.
            </summary>
            <typeparam name="TState">Type of the turn state. This allows for strongly typed access to the turn state.</typeparam>
            <param name="turnContext">A strongly-typed context object for this turn.</param>
            <param name="turnState">The turn state object that stores arbitrary data for this turn.</param>
            <param name="meeting">The details of the meeting.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
            <returns>A task that represents the work queued to execute.</returns>
        </member>
        <member name="T:Microsoft.Teams.AI.MeetingEndHandler`1">
            <summary>
            Function for handling Microsoft Teams meeting end events.
            </summary>
            <typeparam name="TState">Type of the turn state. This allows for strongly typed access to the turn state.</typeparam>
            <param name="turnContext">A strongly-typed context object for this turn.</param>
            <param name="turnState">The turn state object that stores arbitrary data for this turn.</param>
            <param name="meeting">The details of the meeting.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
            <returns>A task that represents the work queued to execute.</returns>
        </member>
        <member name="T:Microsoft.Teams.AI.MeetingParticipantsEventHandler`1">
            <summary>
            Function for handling Microsoft Teams meeting participants join or leave events.
            </summary>
            <typeparam name="TState">Type of the turn state. This allows for strongly typed access to the turn state.</typeparam>
            <param name="turnContext">A strongly-typed context object for this turn.</param>
            <param name="turnState">The turn state object that stores arbitrary data for this turn.</param>
            <param name="meeting">The details of the meeting.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
            <returns>A task that represents the work queued to execute.</returns>
        </member>
        <member name="T:Microsoft.Teams.AI.MessageExtensions`2">
            <summary>
            MessageExtensions class to enable fluent style registration of handlers related to Message Extensions.
            </summary>
            <typeparam name="TState">The type of the turn state object used by the application.</typeparam>
            <typeparam name="TTurnStateManager">The type of the turn state manager object used by the application.</typeparam>
        </member>
        <member name="M:Microsoft.Teams.AI.MessageExtensions`2.#ctor(Microsoft.Teams.AI.Application{`0,`1})">
            <summary>
            Creates a new instance of the MessageExtensions class.
            </summary>
            <param name="app"></param> The top level application class to register handlers with.
        </member>
        <member name="M:Microsoft.Teams.AI.MessageExtensions`2.OnSubmitAction(System.String,Microsoft.Teams.AI.SubmitActionHandler{`0})">
            <summary>
            Registers a handler that implements the submit action for an Action based Message Extension.
            </summary>
            <param name="commandId">ID of the command to register the handler for.</param>
            <param name="handler">Function to call when the command is received.</param>
            <returns>The application instance for chaining purposes.</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.MessageExtensions`2.OnSubmitAction(System.Text.RegularExpressions.Regex,Microsoft.Teams.AI.SubmitActionHandler{`0})">
            <summary>
            Registers a handler that implements the submit action for an Action based Message Extension.
            </summary>
            <param name="commandIdPattern">Regular expression to match against the ID of the command to register the handler for.</param>
            <param name="handler">Function to call when the command is received.</param>
            <returns>The application instance for chaining purposes.</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.MessageExtensions`2.OnSubmitAction(Microsoft.Teams.AI.RouteSelector,Microsoft.Teams.AI.SubmitActionHandler{`0})">
            <summary>
            Registers a handler that implements the submit action for an Action based Message Extension.
            </summary>
            <param name="routeSelector">Function that's used to select a route. The function returning true triggers the route.</param>
            <param name="handler">Function to call when the route is triggered.</param>
            <returns>The application instance for chaining purposes.</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.MessageExtensions`2.OnSubmitAction(Microsoft.Teams.AI.MultipleRouteSelector,Microsoft.Teams.AI.SubmitActionHandler{`0})">
            <summary>
            Registers a handler that implements the submit action for an Action based Message Extension.
            </summary>
            <param name="routeSelectors">Combination of String, Regex, and RouteSelector selectors.</param>
            <param name="handler">Function to call when the route is triggered.</param>
            <returns>The application instance for chaining purposes.</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.MessageExtensions`2.OnBotMessagePreviewEdit(System.String,Microsoft.Teams.AI.BotMessagePreviewEditHandler{`0})">
            <summary>
            Registers a handler to process the 'edit' action of a message that's being previewed by the
            user prior to sending.
            </summary>
            <param name="commandId">ID of the command to register the handler for.</param>
            <param name="handler">Function to call when the command is received.</param>
            <returns>The application instance for chaining purposes.</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.MessageExtensions`2.OnBotMessagePreviewEdit(System.Text.RegularExpressions.Regex,Microsoft.Teams.AI.BotMessagePreviewEditHandler{`0})">
            <summary>
            Registers a handler to process the 'edit' action of a message that's being previewed by the
            user prior to sending.
            </summary>
            <param name="commandIdPattern">Regular expression to match against the ID of the command to register the handler for.</param>
            <param name="handler">Function to call when the command is received.</param>
            <returns>The application instance for chaining purposes.</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.MessageExtensions`2.OnBotMessagePreviewEdit(Microsoft.Teams.AI.RouteSelector,Microsoft.Teams.AI.BotMessagePreviewEditHandler{`0})">
            <summary>
            Registers a handler to process the 'edit' action of a message that's being previewed by the
            user prior to sending.
            </summary>
            <param name="routeSelector">Function that's used to select a route. The function returning true triggers the route.</param>
            <param name="handler">Function to call when the route is triggered.</param>
            <returns>The application instance for chaining purposes.</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.MessageExtensions`2.OnBotMessagePreviewEdit(Microsoft.Teams.AI.MultipleRouteSelector,Microsoft.Teams.AI.BotMessagePreviewEditHandler{`0})">
            <summary>
            Registers a handler to process the 'edit' action of a message that's being previewed by the
            user prior to sending.
            </summary>
            <param name="routeSelectors">Combination of String, Regex, and RouteSelector selectors.</param>
            <param name="handler">Function to call when the route is triggered.</param>
            <returns>The application instance for chaining purposes.</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.MessageExtensions`2.OnBotMessagePreviewSend(System.String,Microsoft.Teams.AI.BotMessagePreviewSendHandler{`0})">
            <summary>
            Registers a handler to process the 'send' action of a message that's being previewed by the
            user prior to sending.
            </summary>
            <param name="commandId">ID of the command to register the handler for.</param>
            <param name="handler">Function to call when the command is received.</param>
            <returns>The application instance for chaining purposes.</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.MessageExtensions`2.OnBotMessagePreviewSend(System.Text.RegularExpressions.Regex,Microsoft.Teams.AI.BotMessagePreviewSendHandler{`0})">
            <summary>
            Registers a handler to process the 'send' action of a message that's being previewed by the
            user prior to sending.
            </summary>
            <param name="commandIdPattern">Regular expression to match against the ID of the command to register the handler for.</param>
            <param name="handler">Function to call when the command is received.</param>
            <returns>The application instance for chaining purposes.</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.MessageExtensions`2.OnBotMessagePreviewSend(Microsoft.Teams.AI.RouteSelector,Microsoft.Teams.AI.BotMessagePreviewSendHandler{`0})">
            <summary>
            Registers a handler to process the 'send' action of a message that's being previewed by the
            user prior to sending.
            </summary>
            <param name="routeSelector">Function that's used to select a route. The function returning true triggers the route.</param>
            <param name="handler">Function to call when the route is triggered.</param>
            <returns>The application instance for chaining purposes.</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.MessageExtensions`2.OnBotMessagePreviewSend(Microsoft.Teams.AI.MultipleRouteSelector,Microsoft.Teams.AI.BotMessagePreviewSendHandler{`0})">
            <summary>
            Registers a handler to process the 'send' action of a message that's being previewed by the
            user prior to sending.
            </summary>
            <param name="routeSelectors">Combination of String, Regex, and RouteSelector selectors.</param>
            <param name="handler">Function to call when the route is triggered.</param>
            <returns>The application instance for chaining purposes.</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.MessageExtensions`2.OnFetchTask(System.String,Microsoft.Teams.AI.FetchTaskHandler{`0})">
            <summary>
            Registers a handler to process the initial fetch task for an Action based message extension.
            </summary>
            <param name="commandId">ID of the commands to register the handler for.</param>
            <param name="handler">Function to call when the command is received.</param>
            <returns>The application instance for chaining purposes.</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.MessageExtensions`2.OnFetchTask(System.Text.RegularExpressions.Regex,Microsoft.Teams.AI.FetchTaskHandler{`0})">
            <summary>
            Registers a handler to process the initial fetch task for an Action based message extension.
            </summary>
            <param name="commandIdPattern">Regular expression to match against the ID of the commands to register the handler for.</param>
            <param name="handler">Function to call when the command is received.</param>
            <returns>The application instance for chaining purposes.</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.MessageExtensions`2.OnFetchTask(Microsoft.Teams.AI.RouteSelector,Microsoft.Teams.AI.FetchTaskHandler{`0})">
            <summary>
            Registers a handler to process the initial fetch task for an Action based message extension.
            </summary>
            <param name="routeSelector">Function that's used to select a route. The function returning true triggers the route.</param>
            <param name="handler">Function to call when the route is triggered.</param>
            <returns>The application instance for chaining purposes.</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.MessageExtensions`2.OnFetchTask(Microsoft.Teams.AI.MultipleRouteSelector,Microsoft.Teams.AI.FetchTaskHandler{`0})">
            <summary>
            Registers a handler to process the initial fetch task for an Action based message extension.
            </summary>
            <param name="routeSelectors">Combination of String, Regex, and RouteSelector selectors.</param>
            <param name="handler">Function to call when the route is triggered.</param>
            <returns>The application instance for chaining purposes.</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.MessageExtensions`2.OnQuery(System.String,Microsoft.Teams.AI.QueryHandler{`0})">
            <summary>
            Registers a handler that implements a Search based Message Extension.
            </summary>
            <param name="commandId">ID of the command to register the handler for.</param>
            <param name="handler">Function to call when the command is received.</param>
            <returns>The application instance for chaining purposes.</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.MessageExtensions`2.OnQuery(System.Text.RegularExpressions.Regex,Microsoft.Teams.AI.QueryHandler{`0})">
            <summary>
            Registers a handler that implements a Search based Message Extension.
            </summary>
            <param name="commandIdPattern">Regular expression to match against the ID of the command to register the handler for.</param>
            <param name="handler">Function to call when the command is received.</param>
            <returns>The application instance for chaining purposes.</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.MessageExtensions`2.OnQuery(Microsoft.Teams.AI.RouteSelector,Microsoft.Teams.AI.QueryHandler{`0})">
            <summary>
            Registers a handler that implements a Search based Message Extension.
            </summary>
            <param name="routeSelector">Function that's used to select a route. The function returning true triggers the route.</param>
            <param name="handler">Function to call when the route is triggered.</param>
            <returns>The application instance for chaining purposes.</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.MessageExtensions`2.OnQuery(Microsoft.Teams.AI.MultipleRouteSelector,Microsoft.Teams.AI.QueryHandler{`0})">
            <summary>
            Registers a handler that implements a Search based Message Extension.
            </summary>
            <param name="routeSelectors">Combination of String, Regex, and RouteSelector selectors.</param>
            <param name="handler">Function to call when the route is triggered.</param>
            <returns>The application instance for chaining purposes.</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.MessageExtensions`2.OnSelectItem(Microsoft.Teams.AI.SelectItemHandler{`0})">
            <summary>
            Registers a handler that implements the logic to handle the tap actions for items returned
            by a Search based message extension.
            <remarks>
            The `composeExtension/selectItem` INVOKE activity does not contain any sort of command ID,
            so only a single select item handler can be registered. Developers will need to include a
            type name of some sort in the preview item they return if they need to support multiple
            select item handlers.
            </remarks>>
            </summary>
            <param name="handler">Function to call when the event is triggered.</param>
            <returns>The application instance for chaining purposes.</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.MessageExtensions`2.OnQueryLink(Microsoft.Teams.AI.QueryLinkHandler{`0})">
            <summary>
            Registers a handler that implements a Link Unfurling based Message Extension.
            </summary>
            <param name="handler">Function to call when the event is triggered.</param>
            <returns>The application instance for chaining purposes.</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.MessageExtensions`2.OnAnonymousQueryLink(Microsoft.Teams.AI.QueryLinkHandler{`0})">
            <summary>
            Registers a handler that implements the logic to handle anonymous link unfurling.
            </summary>
            <remarks>
            The `composeExtension/anonymousQueryLink` INVOKE activity does not contain any sort of command ID,
            so only a single select item handler can be registered.
            For more information visit https://learn.microsoft.com/microsoftteams/platform/messaging-extensions/how-to/link-unfurling?#enable-zero-install-link-unfurling
            </remarks>
            <param name="handler">Function to call when the event is triggered.</param>
            <returns>The application instance for chaining purposes.</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.MessageExtensions`2.OnQueryUrlSetting(Microsoft.Teams.AI.QueryUrlSettingHandler{`0})">
            <summary>
            Registers a handler that invokes the fetch of the configuration settings for a Message Extension.
            </summary>
            <remarks>
            The `composeExtension/querySettingUrl` INVOKE activity does not contain a command ID, so only a single select item handler can be registered.
            </remarks>
            <param name="handler">Function to call when the event is triggered.</param>
            <returns>The application instance for chaining purposes.</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.MessageExtensions`2.OnConfigureSettings(Microsoft.Teams.AI.ConfigureSettingsHandler{`0})">
            <summary>
            Registers a handler that implements the logic to invoke configuring Message Extension settings.
            </summary>
            <remarks>
            The `composeExtension/setting` INVOKE activity does not contain a command ID, so only a single select item handler can be registered.
            </remarks>
            <param name="handler">Function to call when the event is triggered.</param>
            <returns>The application instance for chaining purposes.</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.MessageExtensions`2.OnCardButtonClicked(Microsoft.Teams.AI.CardButtonClickedHandler{`0})">
            <summary>
            Registers a handler that implements the logic when a user has clicked on a button in a Message Extension card.
            </summary>
            <remarks>
            The `composeExtension/onCardButtonClicked` INVOKE activity does not contain any sort of command ID,
            so only a single select item handler can be registered. Developers will need to include a
            type name of some sort in the preview item they return if they need to support multiple select item handlers.
            </remarks>
            <param name="handler">Function to call when the event is triggered.</param>
            <returns>The application instance for chaining purposes.</returns>
        </member>
        <member name="T:Microsoft.Teams.AI.SubmitActionHandler`1">
            <summary>
            Function for handling Message Extension submitAction events.
            </summary>
            <typeparam name="TState">Type of the turn state. This allows for strongly typed access to the turn state.</typeparam>
            <param name="turnContext">A strongly-typed context object for this turn.</param>
            <param name="turnState">The turn state object that stores arbitrary data for this turn.</param>
            <param name="data">The data that was submitted.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
            <returns>An instance of MessagingExtensionActionResponse.</returns>
        </member>
        <member name="T:Microsoft.Teams.AI.BotMessagePreviewEditHandler`1">
            <summary>
            Function for handling Message Extension botMessagePreview edit events.
            </summary>
            <typeparam name="TState">Type of the turn state. This allows for strongly typed access to the turn state.</typeparam>
            <param name="turnContext">A strongly-typed context object for this turn.</param>
            <param name="turnState">The turn state object that stores arbitrary data for this turn.</param>
            <param name="activityPreview">The activity that's being previewed by the user.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
            <returns>An instance of MessagingExtensionActionResponse.</returns>
        </member>
        <member name="T:Microsoft.Teams.AI.BotMessagePreviewSendHandler`1">
            <summary>
            Function for handling Message Extension botMessagePreview send events.
            </summary>
            <typeparam name="TState">Type of the turn state. This allows for strongly typed access to the turn state.</typeparam>
            <param name="turnContext">A strongly-typed context object for this turn.</param>
            <param name="turnState">The turn state object that stores arbitrary data for this turn.</param>
            <param name="activityPreview">The activity that's being previewed by the user.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
            <returns>A task that represents the work queued to execute.</returns>
        </member>
        <member name="T:Microsoft.Teams.AI.FetchTaskHandler`1">
            <summary>
            Function for handling Message Extension fetchTask events.
            </summary>
            <typeparam name="TState">Type of the turn state. This allows for strongly typed access to the turn state.</typeparam>
            <param name="turnContext">A strongly-typed context object for this turn.</param>
            <param name="turnState">The turn state object that stores arbitrary data for this turn.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
            <returns>An instance of TaskModuleResponse.</returns>
        </member>
        <member name="T:Microsoft.Teams.AI.QueryHandler`1">
            <summary>
            Function for handling Message Extension query events.
            </summary>
            <typeparam name="TState">Type of the turn state. This allows for strongly typed access to the turn state.</typeparam>
            <param name="turnContext">A strongly-typed context object for this turn.</param>
            <param name="turnState">The turn state object that stores arbitrary data for this turn.</param>
            <param name="query">The query parameters that were sent by the client.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
            <returns>An instance of MessagingExtensionResult.</returns>
        </member>
        <member name="T:Microsoft.Teams.AI.SelectItemHandler`1">
            <summary>
            Function for handling Message Extension selecting item events.
            </summary>
            <typeparam name="TState">Type of the turn state. This allows for strongly typed access to the turn state.</typeparam>
            <param name="turnContext">A strongly-typed context object for this turn.</param>
            <param name="turnState">The turn state object that stores arbitrary data for this turn.</param>
            <param name="item">The item that was selected.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
            <returns>An instance of MessagingExtensionResult.</returns>
        </member>
        <member name="T:Microsoft.Teams.AI.QueryLinkHandler`1">
            <summary>
            Function for handling Message Extension link unfurling events.
            </summary>
            <typeparam name="TState">Type of the turn state. This allows for strongly typed access to the turn state.</typeparam>
            <param name="turnContext">A strongly-typed context object for this turn.</param>
            <param name="turnState">The turn state object that stores arbitrary data for this turn.</param>
            <param name="url">The URL that should be unfurled.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
            <returns>An instance of MessagingExtensionResult.</returns>
        </member>
        <member name="T:Microsoft.Teams.AI.QueryUrlSettingHandler`1">
            <summary>
            Function for handling Message Extension configuring query setting url events.
            </summary>
            <typeparam name="TState">Type of the turn state. This allows for strongly typed access to the turn state.</typeparam>
            <param name="turnContext">A strongly-typed context object for this turn.</param>
            <param name="turnState">The turn state object that stores arbitrary data for this turn.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
            <returns>An instance of MessagingExtensionResult.</returns>
        </member>
        <member name="T:Microsoft.Teams.AI.ConfigureSettingsHandler`1">
            <summary>
            Function for handling Message Extension configuring settings events.
            </summary>
            <typeparam name="TState">Type of the turn state. This allows for strongly typed access to the turn state.</typeparam>
            <param name="turnContext">A strongly-typed context object for this turn.</param>
            <param name="turnState">The turn state object that stores arbitrary data for this turn.</param>
            <param name="settings">The configuration settings that was submitted.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
            <returns>A task that represents the work queued to execute.</returns>
        </member>
        <member name="T:Microsoft.Teams.AI.CardButtonClickedHandler`1">
            <summary>
            Function for handling Message Extension clicking card button events.
            </summary>
            <typeparam name="TState">Type of the turn state. This allows for strongly typed access to the turn state.</typeparam>
            <param name="turnContext">A strongly-typed context object for this turn.</param>
            <param name="turnState">The turn state object that stores arbitrary data for this turn.</param>
            <param name="cardData">The card data.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
            <returns>A task that represents the work queued to execute.</returns>
        </member>
        <member name="T:Microsoft.Teams.AI.O365ConnectorCardActionHandler`1">
            <summary>
            Function for handling O365 Connector Card Action activities.
            </summary>
            <typeparam name="TState">Type of the turn state. This allows for strongly typed access to the turn state.</typeparam>
            <param name="turnContext">A strongly-typed context object for this turn.</param>
            <param name="turnState">The turn state object that stores arbitrary data for this turn.</param>
            <param name="query">The O365 connector card HttpPOST invoke query.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
            <returns>A task that represents the work queued to execute.</returns>
        </member>
        <member name="T:Microsoft.Teams.AI.Query`1">
            <summary>
            Query arguments for Message Extension query and Adaptive Card dynamic search.
            </summary>
            <typeparam name="TParams">Type of the query parameters.</typeparam>
        </member>
        <member name="P:Microsoft.Teams.AI.Query`1.Count">
            <summary>
            Number of items to return in the result set.
            </summary>
        </member>
        <member name="P:Microsoft.Teams.AI.Query`1.Skip">
            <summary>
            Number of items to skip in the result set.
            </summary>
        </member>
        <member name="P:Microsoft.Teams.AI.Query`1.Parameters">
            <summary>
            Query parameters.
            </summary>
        </member>
        <member name="M:Microsoft.Teams.AI.Query`1.#ctor(System.Int32,System.Int32,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Teams.AI.Query`1"/> class.
            </summary>
            <param name="count">Number of items to return in the result set.</param>
            <param name="skip">Number of items to skip in the result set.</param>
            <param name="parameters">Query parameters.</param>
        </member>
        <member name="T:Microsoft.Teams.AI.ReadReceiptHandler`1">
            <summary>
            Function for handling read receipt events.
            </summary>
            <typeparam name="TState">Type of the turn state. This allows for strongly typed access to the turn state.</typeparam>
            <param name="turnContext">A strongly-typed context object for this turn.</param>
            <param name="turnState">The turn state object that stores arbitrary data for this turn.</param>
            <param name="data">The read receipt data.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Teams.AI.MultipleRouteSelector">
            <summary>
            Combination of String, Regex, and RouteSelector selectors.
            </summary>
        </member>
        <member name="P:Microsoft.Teams.AI.MultipleRouteSelector.Strings">
            <summary>
            The string selectors.
            </summary>
        </member>
        <member name="P:Microsoft.Teams.AI.MultipleRouteSelector.Regexes">
            <summary>
            The Regex selectors.
            </summary>
        </member>
        <member name="P:Microsoft.Teams.AI.MultipleRouteSelector.RouteSelectors">
            <summary>
            The RouteSelector function selectors. 
            </summary>
        </member>
        <member name="T:Microsoft.Teams.AI.RouteSelector">
            <summary>
            Function for selecting whether a route handler should be triggered.
            </summary>
            <param name="turnContext">Context for the current turn of conversation with the user.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
            <returns>True if the route handler should be triggered. Otherwise, False.</returns>
        </member>
        <member name="T:Microsoft.Teams.AI.RouteHandler`1">
            <summary>
            The common route handler. Function for handling an incoming request.
            </summary>
            <typeparam name="TState">Type of the turn state. This allows for strongly typed access to the turn state.</typeparam>
            <param name="turnContext">A strongly-typed context object for this turn.</param>
            <param name="turnState">The turn state object that stores arbitrary data for this turn.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Teams.AI.TaskModules`2">
            <summary>
            TaskModules class to enable fluent style registration of handlers related to Task Modules.
            </summary>
            <typeparam name="TState">The type of the turn state object used by the application.</typeparam>
            <typeparam name="TTurnStateManager">The type of the turn state manager object used by the application.</typeparam>
        </member>
        <member name="M:Microsoft.Teams.AI.TaskModules`2.#ctor(Microsoft.Teams.AI.Application{`0,`1})">
            <summary>
            Creates a new instance of the TaskModules class.
            </summary>
            <param name="app"> The top level application class to register handlers with.</param>
        </member>
        <member name="M:Microsoft.Teams.AI.TaskModules`2.OnFetch(System.String,Microsoft.Teams.AI.FetchHandler{`0})">
            <summary>
             Registers a handler to process the initial fetch of the task module.
            </summary>
            <param name="verb">Name of the verb to register the handler for.</param>
            <param name="handler">Function to call when the route is triggered.</param>
            <returns>The application instance for chaining purposes.</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.TaskModules`2.OnFetch(System.Text.RegularExpressions.Regex,Microsoft.Teams.AI.FetchHandler{`0})">
            <summary>
             Registers a handler to process the initial fetch of the task module.
            </summary>
            <param name="verbPattern">Regular expression to match against the verbs to register the handler for.</param>
            <param name="handler">Function to call when the route is triggered.</param>
            <returns>The application instance for chaining purposes.</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.TaskModules`2.OnFetch(Microsoft.Teams.AI.RouteSelector,Microsoft.Teams.AI.FetchHandler{`0})">
            <summary>
             Registers a handler to process the initial fetch of the task module.
            </summary>
            <param name="routeSelector">Function that's used to select a route. The function returning true triggers the route.</param>
            <param name="handler">Function to call when the route is triggered.</param>
            <returns>The application instance for chaining purposes.</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.TaskModules`2.OnFetch(Microsoft.Teams.AI.MultipleRouteSelector,Microsoft.Teams.AI.FetchHandler{`0})">
            <summary>
             Registers a handler to process the initial fetch of the task module.
            </summary>
            <param name="routeSelectors">Combination of String, Regex, and RouteSelector selectors.</param>
            <param name="handler">Function to call when the route is triggered.</param>
            <returns>The application instance for chaining purposes.</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.TaskModules`2.OnSubmit(System.String,Microsoft.Teams.AI.SubmitHandler{`0})">
            <summary>
            Registers a handler to process the submission of a task module.
            </summary>
            <param name="verb">Name of the verb to register the handler for.</param>
            <param name="handler">Function to call when the route is triggered.</param>
            <returns>The application instance for chaining purposes.</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.TaskModules`2.OnSubmit(System.Text.RegularExpressions.Regex,Microsoft.Teams.AI.SubmitHandler{`0})">
            <summary>
            Registers a handler to process the submission of a task module.
            </summary>
            <param name="verbPattern">Regular expression to match against the verbs to register the handler for</param>
            <param name="handler">Function to call when the route is triggered.</param>
            <returns>The application instance for chaining purposes.</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.TaskModules`2.OnSubmit(Microsoft.Teams.AI.RouteSelector,Microsoft.Teams.AI.SubmitHandler{`0})">
            <summary>
            Registers a handler to process the submission of a task module.
            </summary>
            <param name="routeSelector">Function that's used to select a route. The function returning true triggers the route.</param>
            <param name="handler">Function to call when the route is triggered.</param>
            <returns>The application instance for chaining purposes.</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.TaskModules`2.OnSubmit(Microsoft.Teams.AI.MultipleRouteSelector,Microsoft.Teams.AI.SubmitHandler{`0})">
            <summary>
            Registers a handler to process the submission of a task module.
            </summary>
            <param name="routeSelectors">Combination of String, Regex, and RouteSelector verb(s) to register the handler for.</param>
            <param name="handler">Function to call when the route is triggered.</param>
            <returns>The application instance for chaining purposes.</returns>
        </member>
        <member name="T:Microsoft.Teams.AI.FetchHandler`1">
            <summary>
            Function for handling Task Module fetch events.
            </summary>
            <typeparam name="TState">Type of the turn state. This allows for strongly typed access to the turn state.</typeparam>
            <param name="turnContext">A strongly-typed context object for this turn.</param>
            <param name="turnState">The turn state object that stores arbitrary data for this turn.</param>
            <param name="data">The data associated with the fetch.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>An instance of TaskModuleResponse.</returns>
        </member>
        <member name="T:Microsoft.Teams.AI.SubmitHandler`1">
            <summary>
            Function for handling Task Module submit events.
            </summary>
            <typeparam name="TState">Type of the turn state. This allows for strongly typed access to the turn state.</typeparam>
            <param name="turnContext">A strongly-typed context object for this turn.</param>
            <param name="turnState">The turn state object that stores arbitrary data for this turn.</param>
            <param name="data">The data associated with the fetch.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>An instance of TaskModuleResponse.</returns>
        </member>
        <member name="T:Microsoft.Teams.AI.TaskModulesOptions">
            <summary>
            Options for TaskModules class.
            </summary>
        </member>
        <member name="P:Microsoft.Teams.AI.TaskModulesOptions.TaskDataFilter">
            <summary>
            Data field to use to identify the verb of the handler to trigger.
            </summary>
            <remarks>
             When a task module is triggered, the field name specified here will be used to determine
            the name of the verb for the handler to route the request to.
            Defaults to a value of "verb".
            </remarks>
        </member>
        <member name="T:Microsoft.Teams.AI.TurnEventHandler`1">
            <summary>
            Turn event handler to do something before or after a turn is run. Returning false from
            `beforeTurn` lets you prevent the turn from running and returning false from `afterTurn`
            lets you prevent the bots state from being saved.
            <br/>
            <br/>
            Returning false from `beforeTurn` does result in the bots state being saved which lets you
            track the reason why the turn was not processed. It also means you can use `beforeTurn` as
            a way to call into the dialog system. For example, you could use the OAuthPrompt to sign the
            user in before allowing the AI system to run.
            </summary>
            <typeparam name="TState"></typeparam>
            <param name="turnContext">A strongly-typed context object for this turn.</param>
            <param name="turnState">The turn state object that stores arbitrary data for this turn.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
            <returns>True to continue execution of the current turn. Otherwise, False.</returns>
        </member>
        <member name="T:Microsoft.Teams.AI.Exceptions.HttpOperationException">
            <summary>
            Exception thrown when an HTTP operation fails.
            </summary>
        </member>
        <member name="F:Microsoft.Teams.AI.Exceptions.HttpOperationException.StatusCode">
            <summary>
            HTTP status code.
            </summary>
        </member>
        <member name="F:Microsoft.Teams.AI.Exceptions.HttpOperationException.ResponseContent">
            <summary>
            HTTP response content.
            </summary>
        </member>
        <member name="M:Microsoft.Teams.AI.Exceptions.HttpOperationException.#ctor(System.String,System.Nullable{System.Net.HttpStatusCode},System.String)">
            <summary>
            Create an instance of the HttpOperationException class.
            </summary>
            <param name="message">The exception message.</param>
            <param name="httpStatusCode">The HTTP status code.</param>
            <param name="responseContent">The HTTP response content.</param>
        </member>
        <member name="M:Microsoft.Teams.AI.Exceptions.HttpOperationException.isRateLimitedStatusCode">
            <summary>
            Checks status code is a rate limit status code.
            </summary>
            <returns>Returns true if the status code is a rate limit status code.</returns>
        </member>
        <member name="T:Microsoft.Teams.AI.Exceptions.InvokeResponseException">
            <summary>
            A custom exception for invoke response errors.
            </summary>
        </member>
        <member name="P:Microsoft.Teams.AI.Exceptions.InvokeResponseException.StatusCode">
            <summary>
            A getter for the <see cref="T:Microsoft.Teams.AI.Exceptions.InvokeResponseException"/> status code
            </summary>
        </member>
        <member name="P:Microsoft.Teams.AI.Exceptions.InvokeResponseException.Body">
            <summary>
            A getter for the <see cref="T:Microsoft.Teams.AI.Exceptions.InvokeResponseException"/> body
            </summary>
        </member>
        <member name="M:Microsoft.Teams.AI.Exceptions.InvokeResponseException.#ctor(System.Net.HttpStatusCode,System.Object,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Teams.AI.Exceptions.InvokeResponseException"/> class.
            </summary>
            <param name="statusCode">The Http status code of the error.</param>
            <param name="body">The body of the exception. Default is null.</param>
            <param name="innerException">The inner exception. Default is null.</param>
        </member>
        <member name="T:Microsoft.Teams.AI.Exceptions.TeamsAIException">
            <summary>
            Base exception for the TeamsAI library.
            </summary>
        </member>
        <member name="M:Microsoft.Teams.AI.Exceptions.TeamsAIException.#ctor(System.String)">
            <summary>
            Create an instance of the <see cref="T:Microsoft.Teams.AI.Exceptions.TeamsAIException"/> class.
            </summary>
            <param name="message">Exception message.</param>
        </member>
        <member name="M:Microsoft.Teams.AI.Exceptions.TeamsAIException.#ctor(System.String,System.Exception)">
            <summary>
            Create an instance of the <see cref="T:Microsoft.Teams.AI.Exceptions.TeamsAIException"/> class.
            </summary>
            <param name="message">Exception message.</param>
            <param name="innerException">Inner exception.</param>
        </member>
        <member name="T:Microsoft.Teams.AI.State.IReadOnlyEntry`1">
            <summary>
            Represents a turn state entry.
            </summary>
            <typeparam name="TValue">The value type of the turn state entry</typeparam>
        </member>
        <member name="P:Microsoft.Teams.AI.State.IReadOnlyEntry`1.HasChanged">
            <summary>
            Whether the entry has changed since it was loaded.
            </summary>
        </member>
        <member name="P:Microsoft.Teams.AI.State.IReadOnlyEntry`1.IsDeleted">
            <summary>
            Whether the entry has been deleted.
            </summary>
        </member>
        <member name="P:Microsoft.Teams.AI.State.IReadOnlyEntry`1.Value">
            <summary>
            The value of the entry.
            </summary>
        </member>
        <member name="P:Microsoft.Teams.AI.State.IReadOnlyEntry`1.StorageKey">
            <summary>
            The key used to store the entry in storage.
            </summary>
        </member>
        <member name="T:Microsoft.Teams.AI.State.ITurnState`3">
            <summary>
            The turn state interface.
            </summary>
            <typeparam name="TConversationState">The conversation state class.</typeparam>
            <typeparam name="TUserState">The user state class.</typeparam>
            <typeparam name="TTempState">The temp state class.</typeparam>
        </member>
        <member name="P:Microsoft.Teams.AI.State.ITurnState`3.Conversation">
            <summary>
            Gets the conversation state.
            </summary>
        </member>
        <member name="P:Microsoft.Teams.AI.State.ITurnState`3.User">
            <summary>
            Gets the user state.
            </summary>
        </member>
        <member name="P:Microsoft.Teams.AI.State.ITurnState`3.Temp">
            <summary>
            Gets the temp state.
            </summary>
        </member>
        <member name="T:Microsoft.Teams.AI.State.ITurnStateManager`1">
            <summary>
            Interface implemented by classes responsible for loading and saving an applications turn state.
            </summary>
            <typeparam name="TState">Type of the state object being persisted.</typeparam>
        </member>
        <member name="M:Microsoft.Teams.AI.State.ITurnStateManager`1.LoadStateAsync(Microsoft.Bot.Builder.IStorage,Microsoft.Bot.Builder.ITurnContext)">
            <summary>
            Loads all of the state scopes for the current turn.
            </summary>
            <param name="storage">Storage provider to load state scopes from.</param>
            <param name="turnContext">Context for the current turn of conversation with the user.</param>
            <returns>The loaded state scopes.</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.State.ITurnStateManager`1.SaveStateAsync(Microsoft.Bot.Builder.IStorage,Microsoft.Bot.Builder.ITurnContext,`0)">
            <summary>
            Saves all of the state scopes for the current turn.
            </summary>
            <param name="storage">Storage provider to save state scopes to.</param>
            <param name="turnContext">Context for the current turn of conversation with the user.</param>
            <param name="turnState">State scopes to save.</param>
        </member>
        <member name="T:Microsoft.Teams.AI.State.StateBase">
            <summary>
            The base state class.
            </summary>
        </member>
        <member name="M:Microsoft.Teams.AI.State.StateBase.TryGetValue``1(System.String,``0@)">
            <summary>
            Tries to get the value from the dictionary.
            </summary>
            <typeparam name="T">Type of the value</typeparam>
            <param name="key">key to look for</param>
            <param name="value">value associated with key</param>
            <returns>True if a value of given type is associated with key.</returns>
            <exception cref="T:System.InvalidCastException"></exception>
        </member>
        <member name="M:Microsoft.Teams.AI.State.StateBase.Get``1(System.String)">
            <summary>
            Gets the value from the dictionary.
            </summary>
            <typeparam name="T">Type of the value</typeparam>
            <param name="key">key to look for</param>
            <returns>The value associated with the key</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.State.StateBase.Set``1(System.String,``0)">
            <summary>
            Sets value in the dictionary.
            </summary>
            <typeparam name="T">Type of value</typeparam>
            <param name="key">key to look for</param>
            <param name="value">value associated with key</param>
        </member>
        <member name="T:Microsoft.Teams.AI.State.TempState">
            <summary>
            Temporary state.
            </summary>
            <remarks>
            Inherit a new class from this base abstract class to strongly type the applications temp state.
            </remarks>
        </member>
        <member name="F:Microsoft.Teams.AI.State.TempState.InputKey">
            <summary>
            Name of the input property.
            </summary>
        </member>
        <member name="F:Microsoft.Teams.AI.State.TempState.OutputKey">
            <summary>
            Name of the output property.
            </summary>
        </member>
        <member name="F:Microsoft.Teams.AI.State.TempState.HistoryKey">
            <summary>
            Name of the history property.
            </summary>
        </member>
        <member name="M:Microsoft.Teams.AI.State.TempState.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Teams.AI.State.TempState"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.Teams.AI.State.TempState.Input">
            <summary>
            Input passed to an AI prompt
            </summary>
        </member>
        <member name="P:Microsoft.Teams.AI.State.TempState.Output">
            <summary>
            Output returned from an AI prompt or function
            </summary>
        </member>
        <member name="P:Microsoft.Teams.AI.State.TempState.History">
            <summary>
            Formatted conversation history for embedding in an AI prompt
            </summary>
        </member>
        <member name="T:Microsoft.Teams.AI.State.TurnState`3">
            <summary>
            Defines the default state scopes persisted by the <see cref="T:Microsoft.Teams.AI.State.TurnStateManager`4"/>.
            </summary>
            <typeparam name="TConversationState">Optional. Type of the conversation state object being persisted.</typeparam>
            <typeparam name="TUserState">Optional. Type of the user state object being persisted.</typeparam>
            <typeparam name="TTempState">Optional. Type of the temp state object being persisted.</typeparam>
        </member>
        <member name="F:Microsoft.Teams.AI.State.TurnState`3.ConversationStateKey">
            <summary>
            Name of the conversation state entry.
            </summary>
        </member>
        <member name="F:Microsoft.Teams.AI.State.TurnState`3.UserStateKey">
            <summary>
            Name of the user state entry.
            </summary>
        </member>
        <member name="F:Microsoft.Teams.AI.State.TurnState`3.TempStateKey">
            <summary>
            Name of the temp state entry.
            </summary>
        </member>
        <member name="P:Microsoft.Teams.AI.State.TurnState`3.ConversationStateEntry">
            <summary>
            Stores all the conversation-related state entry.
            </summary>
        </member>
        <member name="P:Microsoft.Teams.AI.State.TurnState`3.UserStateEntry">
            <summary>
            Stores all the user related state entry.
            </summary>
        </member>
        <member name="P:Microsoft.Teams.AI.State.TurnState`3.TempStateEntry">
            <summary>
            Stores all the temporary state entry for the current turn.
            </summary>
        </member>
        <member name="P:Microsoft.Teams.AI.State.TurnState`3.Conversation">
            <summary>
            Stores all the conversation-related state.
            </summary>
        </member>
        <member name="P:Microsoft.Teams.AI.State.TurnState`3.User">
            <summary>
            Stores all the user related state.
            </summary>
        </member>
        <member name="P:Microsoft.Teams.AI.State.TurnState`3.Temp">
            <summary>
            Stores the current turn's state.
            </summary>
        </member>
        <member name="T:Microsoft.Teams.AI.State.TurnState">
            <summary>
            Defines the default state scopes persisted by the <see cref="T:Microsoft.Teams.AI.State.TurnStateManager"/>.
            </summary>
        </member>
        <member name="T:Microsoft.Teams.AI.State.TurnStateEntry`1">
            <summary>
            The turn state entry.
            </summary>
            <typeparam name="TValue">The type of value.</typeparam>
        </member>
        <member name="M:Microsoft.Teams.AI.State.TurnStateEntry`1.#ctor(`0,System.String)">
            <summary>
            Constructs the turn state entry.
            </summary>
            <param name="value">The entry value</param>
            <param name="storageKey">The storage key used to store object entry</param>
        </member>
        <member name="P:Microsoft.Teams.AI.State.TurnStateEntry`1.HasChanged">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Teams.AI.State.TurnStateEntry`1.IsDeleted">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Teams.AI.State.TurnStateEntry`1.Value">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Teams.AI.State.TurnStateEntry`1.StorageKey">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Teams.AI.State.TurnStateEntry`1.Delete">
            <summary>
             Deletes the entry.
            </summary>
        </member>
        <member name="M:Microsoft.Teams.AI.State.TurnStateEntry`1.Replace(`0)">
            <summary>
            Replaces the value in the entry.
            </summary>
            <param name="value">The entry value.</param>
        </member>
        <member name="M:Microsoft.Teams.AI.State.TurnStateEntry`1.ComputeHash(System.Object)">
            <summary>
            Computes the hash from the object
            </summary>
            <param name="obj">The object to compute has from</param>
            <returns>Returns a Json object representation </returns>
        </member>
        <member name="T:Microsoft.Teams.AI.State.TurnStateManager`4">
            <summary>
            Handles loading and saving of the configured turn state class.
            </summary>
            <typeparam name="TState">Optional. Type of turn state that encompasses the conversation, user and temp state.</typeparam>
            <typeparam name="TConversationState">Optional. Type of the conversation state object being persisted.</typeparam>
            <typeparam name="TUserState">Optional. Type of the user state object being persisted.</typeparam>
            <typeparam name="TTempState">Optional. Type of the temp state object being persisted.</typeparam>
        </member>
        <member name="M:Microsoft.Teams.AI.State.TurnStateManager`4.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Teams.AI.State.TurnStateManager`4"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Teams.AI.State.TurnStateManager`4.LoadStateAsync(Microsoft.Bot.Builder.IStorage,Microsoft.Bot.Builder.ITurnContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Teams.AI.State.TurnStateManager`4.SaveStateAsync(Microsoft.Bot.Builder.IStorage,Microsoft.Bot.Builder.ITurnContext,`0)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.Teams.AI.State.TurnStateManager">
            <summary>
            Default turn state manager.
            </summary>
        </member>
        <member name="T:Microsoft.Teams.AI.TypingTimer">
            <summary>
            Encapsulates the logic for sending "typing" activity to the user.
            </summary>
        </member>
        <member name="F:Microsoft.Teams.AI.TypingTimer._interval">
            <summary>
            The interval in milliseconds to send "typing" activity.
            </summary>
        </member>
        <member name="F:Microsoft.Teams.AI.TypingTimer._disposedValue">
            <summary>
            To detect redundant calls
            </summary>
        </member>
        <member name="M:Microsoft.Teams.AI.TypingTimer.#ctor(System.Int32)">
            <summary>
            Constructs a new instance of the <see cref="T:Microsoft.Teams.AI.TypingTimer"/> class.
            </summary>
            <param name="interval">The interval in milliseconds to send "typing" activity.</param>
        </member>
        <member name="M:Microsoft.Teams.AI.TypingTimer.Start(Microsoft.Bot.Builder.ITurnContext)">
            <summary>
            Manually start a timer to periodically send "typing" activity.
            </summary>
            <remarks>
            The timer will automatically end once an outgoing activity has been sent. If the timer is already running or 
            the current activity is not a "message" the call is ignored.
            </remarks>
            <param name="turnContext">The context for the current turn with the user.</param>
            <returns>True if the timer was started, otherwise False.</returns>
        </member>
        <member name="M:Microsoft.Teams.AI.TypingTimer.Dispose">
            <summary>
            Stop the timer that periodically sends "typing" activity.
            </summary>
        </member>
        <member name="M:Microsoft.Teams.AI.TypingTimer.IsRunning">
            <summary>
            Whether there is a timer currently running.
            </summary>
            <returns>True if there's a timer currently running, otherwise False.</returns>
        </member>
        <member name="T:Microsoft.Teams.AI.Utilities.DefaultHttpClient">
            <summary>
            Provide a default HttpClient to be shared across the library.
            </summary>
        </member>
        <member name="T:Microsoft.Teams.AI.Utilities.Verify">
            <summary>
            Utility class for verifying arguments.
            </summary>
        </member>
        <member name="M:Microsoft.Teams.AI.Utilities.Verify.ParamNotNull(System.Object,System.String)">
            <summary>
            Verifies that the argument is not null.
            </summary>
            <param name="argument">An arbitrary object.</param>
            <param name="parameterName">Optional. The name of the parameter. If not populated, it defaults to the name of the variable passed to the <paramref name="argument"/> parameter.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
    </members>
</doc>
